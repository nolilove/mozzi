MOZZI_SAA_C03_개념정리(2023) 10.18

#AWS Inspector 
ECR(elastic container Registry) , CVE(common vulnerabilities and exposures)
#AWS MACIE
PII (personally identifiable information)

<네트워킹/VPC>
#VPC
1. CIDR, public or private IP 
 
-CIDR: 보안그룹규칙에서도 사용된다 (AWS) 
단순한 ip가 끝나는주소를 나타냄. 0.0.0.0/0은 all ips를 나타냄
subnet mask: defines Ip에서 변경가능한 bits의 개수 ( /0 , /24 , /32)
형식은 두가지가 있는데 /8인경우 255.0.0.0과 동일하다 
			/16인경우 255.255.0.0과 동일하다
			/24인경우 255.255.255.0과 동일하다
			/32인경우 255.255.255.255겠지?

-192.168.0.0 /32는 32비트므로 1개의 아이피만 허용 :2의0승
192.168.0.0 /31은 2개의 아이피만 허용: 2의1승 >192.168.0.0 과 192.168.0.1
192.168.0.0 /30은 4개 : 2의 2승> 0.0~0.3까지 
192.168.0.0 /29은 8개 : 2의 3승> 0.0~0.7까지 
비트 24까지 가면 192.168.0.0 /24는 2의8승> 0.0~0.255까지가된다.
비트 16까지 가면, 192.168.0.0 /16은 2의16승이고 > 255.255까지나 된다.(65.565개 ip)
한편 /0으로 가면, 196.168.0.0 /0은 모든 아이피를 허용하게 된다 
>간단히 설명하면 아이피는 옥텟 4개로 구성되는데 
192.168.0.0/24는 일단 아이피가 0.255로 끝난다( 256개의 아이피할당가능)
그렇다면
192.168.0.0/16은 아이피가 192.168.255.255로 끝난다 (65,565개 할당가능)

134.56.78.123/32는 뭘까? 단하나의 아이피 134.56.78.123을 의미한다.
10.0.0.0/16은 10.0.255.255이니까 잘 알것이다. 그러면
10.0.0.0/17은 무엇인가? > 10.0.2의7승개.2의8승개 이므로 10.0.127.255가 된다.

-IANA에서 구축한 특정 IPv4 주소블록은 주소를 의미한다
AWS에서 기본 VPC의 범위는172.16.0.0 ~ 172.31.255.255 (172.16.0.0 /12)에 사설ip 해당한다.

>AWS VPC  버추얼 프라이빗 클라우드
라우팅테이블은 트래픽이 VPC를 통해 경로를 선택하도록 돕는다.
CIDR 외부 트래픽 모두 igw(인터넷 게이트웨이) 로 이동한다. 
VPC와 인터넷게이트가 연동되어서, 비로소 EC2 인스턴스가 인터넷 액세스를 가지는 것이다.

# IPv4에서 VPC
리전당 최대 5개까지 가능한데, 엄격하게 제한하지는 않음
VPC마다 할당된 CIDR은 5개이다.
각 CIDR의 최소크기는 /28 이다.(최소 16개)
최대크기는 /16 이다. (최대 65,535개)
*당신의 VPC CIDR은 다른 VPC나 네트워크와 겹치지 않게 해야한다.

#VPC의 서브넷
AWS가 IP주소 5개를 각 서브넷에 예약을 해둔다.(처음4개, 마지막1개)
*만약 EC2인스턴스 서브넷에서 29개의 IP주소가 필요할때, /27서브넷은 사용하지 못한다.
왜냐면 32개의 아이피주소에서 예약된 ip주소 5개를 제외하면(32-5 =27개)
딱 27개만 남기때문이다. 
그래서 크기가 /26이 최소가 되어야 한다.(이용가능 64-5 = 59개)  / 32-26=2의6승개,64)

<실습>
 1. 퍼블릭VPC1의 CIDR 생성시에 10.0.0.0/24를 보통 사용한다. /24는 32-24=2의8승개이므로 256개의 아이피주소가 있기 때문에 10.0.0.0부터 10.0.0.255까지 사용가능하기 때문이다. 
2. 퍼블릭VPC2의 Subnet 생성시에 cidr과 다르게 설정해야하므로 10.0.1.0/24로 사용해본다.
3.프라이빗 서브넷을 만드는데 cidr블록을 10.0.16.0/20으로 설정해본다 가용ip수는 4096개에
10.0.16.0~ 10.0.31.255에서 끝난다
4.다음 프라이빗 서브넷 cidr블록은 10.0.32.0/20으로 설정해본다. 
>>그러면 10.0.0.0/24 , 10.0.1.0/24 , 10.0.16.0/20 , 10.0.32.0/20 이라는 서브넷들이 생성된다.
*참고로 다섯개의 주소는 서브넷에 예약된것이므로 기억하자 (4096-5 =4091, 256-5=251 도출)

VPC만 만들어서는 인터넷 통신이 안된다.
다음단계는 IGW, 인터넷 게이트 웨이를 생성하는 것이다.

#IGW , Internet gateway 인터넷 게이트웨이
vpc의 리소스(ec2인스턴스,람다함수 등 서비스)를 인터넷에 연결하는것을 말한다. 
가용성과 중복성이 높고 horizontally하게 확장된다.
-VPC와 별개로 생성해야함.
-IGW만 있어서도 인터넷 액세스 및 통신이 불가함 (VPC와 IGW는 뗄 수 없다)

<실습>
IGW와 라우팅테이블 실습을 한다. (퍼블릭 우선)
VPC생성(퍼블릭2,프라이빗2) 후에 IGW를 생성하고 바로 vpc와 연동한다. 이후 EC2인스턴스에 연결하여 콘솔창을 띄워본다. 이때는 안되는데 답은 경로를 정해줘야한다. 
명시적 라우팅 테이블 연결이 없는 라우팅테이블을 > 명시적 서브넷 연결을 통해서 라우팅 테이블을 VPC에 할당해준다.
EC2인스턴스는 인터넷 액세스 권한을 가지게되고 ping 8.8.8.8로 구글과 통신할 수 있게된다.

# Bastion Hosts 배스쳔 호스트
사용자가 프라이빗 서브넷에 없는 EC2인스턴스에 액세스하고자 한다. 사용자인 우리는 퍼블릭 인터넷에 있고 프라이빗 서브넷에 대한 액세스는 불가한 상태이다.>이때 배스쳔 호스트 사용.
>배스쳔 호스트는 이름그대로 EC2 인스턴스이다 / 이 인스턴스는 "퍼블릭 서브넷에 있다"
배스쳔호스트의 보안그룹과 프라이빗 인스턴스의 보안그룹이 있는데, 배스쳔호스트SG로 프라이빗 서브넷에 있는 EC2 인스턴스SG에 액세스 할 수 있다.(모두가 동일 VPC안에 있으므로)
1. SSH를 배스쳔호스트에 연결
2. 배스쳔호스트가 이 SSH를 프라이빗서브넷에 EC2인스턴스에 연결 하는 방식.

프라이빗인스턴스에 SSH를 적용한다 Protocol TCP / port range22
ssh ec2-user@10.0.22.82 로 접속한다. 
vim or nano Key.pem 으로  .pem파일을 복사하여 붙여넣고 인증키를 생성해둔다
그다음
chmod 0400 Key.pem으로 파일 권한을 변경해주자.
키로접속: ssh ec2-user@10.0.22.82 -i Key.pem

# NAT instance 
NAT은 Network Address Translation 의 약어로 EC2인스턴스로 하여금 프라이빗 서브넷을 통해 인터넷에 접속될 수 있게 한다.
반드시 퍼블릭서브넷으로부터 실행되어야 한다. 또한 고정된 탄력적IP가 연결되어야 한다.
과정
1. NAT인스턴스가 퍼블릭서브넷에서 실행됨
2. NAT인스턴스에 탄력적 IP를 연결, 라우팅테이블 편집으로 사설서브넷과 공용 서브넷의 EC2인스턴스로부터 NAT 인스턴스로 트래픽을 전송하도록 한다.
3. 인스턴스의 IP는 공용서버로 액세스하는데 NAT인스턴스를 통과해야 한다. 따라서 요청에는 소스IP가 10.0.0.20 즉 사설아이피고 목적지는 50.60.4.10인데 NAT 인스턴스는 해당서버로 트래픽을 보낸다. /그래서 NAT에서 목적지로 트래픽을 보내는데 이때 소스ip는 10.0.0.20이 아니라 12.34.56.78으로부터 보내는 것이다.(네트워크 패킷과 소스IP가 바뀌게 되는것)
>>NAT instance는 구 서비스라서, 상위버전인 NAT gateway을 쓰도록 한다

#NAT GATEWAY
AWS에서 관리되는 NAT이며, 높은 대역폭과 높은 가용성, 관리가 필요없다.
특정 AZ에서 생성되고, 탄력적(elastic)IP를 이어받는다.
같은 서브넷의 EC2인스턴스끼리는 못받고, 다른서브넷에서만 액세스할때 도움을 준다
>고가용성
단일az에서 복원됨. 여러az에 두면 결함을 막을 수 있음
az가 중지되면 전체az가 중지되나 다른 nat gateway를 만들면 계속 작동.
 
나트 게이트웨이와 나트 인스턴스의 차이를 고르는 선택을 알아두자.

# SG (security groups) , NACLs
임시 포트 (Ephemeral Ports) 
보안그룹과의 차이>
보안그룹은 인스턴스 수준에서 작동,  허용규칙을 지원, 기본상태일때 모든 트래픽 허용
NACL은 서브넷 수준에서 작동,  허용및 거부규칙 모두지원, 특정IP주소 거부, 무상태

#VPC 피어링
VPC가 모두 같은네트워크에서 작동하도록 만들기
라우트테이블이 각각 VPC의 서브넷에서 EC2인스턴스가 서로 통신하도록 업데이트하여야 함.

#VPC ENDPOINT 
퍼블릭인터넷을 거치지 않고도 인스턴스에 연결 가능하게 해준다
프라이빗 네트워크만 거쳐서 해당 서비스에 액세스가 가능하게되는 것.
-모든 AWS 서비스는 퍼블릭에 노출되며 퍼블릭 URL을 갖는다. VPC엔드포인트를 사용하면 AWS private link를 통해 프라이빗으로 액세스함. 중복과 수평확장이 가능하다,
 인터넷게이트웨이나 나트없이도 실행이 가능. 
문제가 생긴다면, DNS 설정 솔루션이나 라우팅 테이블을 확인하면 된다.
타입>
Interface Endpoints 인터페이스 엔드포인트
: ENI '엘라스틱 네트워크 인터페이스' 를 프로비저닝, VPC의 프라이빗 IP주소이자 AWS 엔트리포인트 _ 대상으로는 모든 서비스를 지원한다. 비용이 발생한다
권장되는 경우: 다른VPC, 다른리전, 온프레미스에서 DC에 액세스해야할 때 

Gateway Endpoints 게이트웨이 엔드포인트
 : 반드시 라우팅 테이블의 대상이 되어야 하며, 게이트웨이를 프로비저닝함. (보안그룹을 사용하지 않는다)_대상으로는 S3, DynamoDB가 있다(둘만 지원)
비용이 들지 않고, 확장성이 인터페이스 엔드포인트보다 높다. 대부분의 S3에서 이 타입이 유리.

VPC flow logs
인터페이스로 들어오는 IP트래픽에서 정보를 포착가능
-VPC, subnet , ENI(Elastic Network Interface) 수준에서 포착이 가능
-이런 흐름의 로그를 S3 , Cloudwatch logs, Kinesis Data Firehose에 전송 가능.
또한 AWS 관리형 인터페이스에도 전송이 가능.


Athena	  EMR	 Redshift

Athena>
SQL 지원의 쿼리 서비스
S3에 데이터 존재
바로 실행
서버리스
쿼리 수행에 따른 과금

EMR>
단순 SQL 만이 아니라, 여러 배치 잡을 수행 가능 (딥 러닝 트레이닝, 파일 변환/복사 등)   
다양한 플랫폼을 사용해서 워크로드에 따라서 다양하게 구성 할 수 있음
데이터가 반드시 S3 에 있을 필요는 없음.
서버 클러스터 존재
클러스터 시간당 과금	

REDSHIFT>
여러 데이터 소스에 대해 구조화된 데이터를 집적. 전형적인 D/W 워크로드에 적합.
서버 클러스터 존재
시간당 과금

#site to site VPN ( S2S )
공용인터넷을 통해 사설 vpn을 연결한다.
-VGW - 버추얼 프라이빗 게이트웨이
-CGW -커스터머 게이트웨이(고객 게이트웨이)
데이터센터에 해당함. 어떻게 아이피주소를 사용하는가?:
>고객 게이트웨이가 공용이라면, 인터넷 라우팅이 가능한 IP주소가 고객 게이트웨이 장치에 있다. 이것을 이용해서 VGW와 CGW를 연결/ CGW를 비공개로남겨 사설ip를 가질수도 있다.
>서브넷의 VPC에서 라우트전파를 활성화해야만
Site to site vpn 연결이 실제로 작동한다.
>만약 온프레미스로부터 EC2로 마이그레이션을 하고 싶다면,(핑을 날리기)
보안그룹의 인바운드 ICMP 프로토콜이 활성화됐는지 확인해야 한다.


Direct Connect - 복원력 관련
최대의 복원력을 달성하려면 여러 독립적인 연결을 다수 개 하는게 좋다(안정성,복원력 최대)
-두개의 direct connection 연결보다는 네개의 direct connection 등 독립적 연결을해야 서버연결이 맛이 갔을때 복원이 더 쉽겠다 / 하나 이상의 로케이션에서 각기 다른 장치에 도달하도록 구성

 ㄴSite to site VPN + Direct connect 
s2s vpn을 백업용도로 사용할 수 있는 아키텍쳐일때 가능하다. 
Direct connection을 통한 일차적 메인 연결이 뻗었을 때도
Sitetosite vpn을 이용한 백업 연결이 존재하므로, 퍼블릭 인터넷에 언제나 연결되어 있기 때문에 기업 DC(데이터센터)와 cloud 안의 VPC와 연결이 가능하다.(안정성)

*IP 멀티캐스트가 나오면 Transit Gateway를 사용해야 한다
; Site to Site VPN ECMP-Equal cost multipath 라우팅_연결 대역폭을 ecmp를 사용해 늘림
;transit gateway로 ecmp를 사용하면 최대처리량이 배로 증가 (2터널이면*2, 3터널이면*3) 다만 성능 최적화 비용이 추가됨.

#VPC 섹션 요약
네트워킹 관련 약어들이 굉장히 많이 나오므로 어려운편이다.

CIDR은 IP 범위고요
VPC는 가상 프라이빗 클라우드고 IPv4와 IPv6에 사용되고요, 서브넷은 AZ에 연계되고
거기에 우린 CIDR를 정의하죠, 퍼블릭 서브넷과 프라이빗 서브넷이 있고요
그럼 퍼블릿 서브넷은 어떻게 만들까요?
예, 우린 인터넷 게이트웨이를 붙이고 서브넷에서 인터넷 게이트웨이로 가는 루트를 만들죠
그리고 그게 활성화되면 IPv4와 IPv6 인터넷 액세스를 제공해요
그리고 루트 테이블을 편집해서 인터넷 게이트웨이, VPC 피어링 연결, VPC 엔드포인트 등으로 가는
루트를 갖게 되고요
그게 우리 VPC 안에 네트워크가 흐르게 하는 핵심이 되죠
Bastion Host는 퍼블릭 EC2 인스턴스고요, 우린 거기로 SSH를 할 수 있었어요, 그리고 그 인스턴스는 프라이빗
서브넷에 있는 다른 EC2 인스턴스에 대한 SSH 연결성을 갖고 있죠
그래서 이름이 Bastion Host예요
NAT 인스턴스는 프라이빗 서브넷에 있는 EC2 인스턴스에 인터넷 액세스를 제공하기 위해
퍼블릭 서브넷에 배포된 EC2 인스턴스죠
지금은 도태되고 있고요, 그게 작동하게 하려면 여러분은 소스 대상 체크 플래그를 해제하고보안 그룹 규칙을 편집해줘야 해요
이제 대신에 NAT 게이트웨이를 쓰는데요, 이게 훨씬 좋고요
AWS에서 관리하죠
프라이빗 EC2 인스턴스에게 스케일링이 가능한 인터넷 액세스를 제공하고요, IPv4만 사용할 수 있어요
다음은 NACL인데요, 네트워크 ACL이었고요, 서브넷 수준에서 인바운드와 아웃바운드 액세스를 정의하는방화벽 규칙이었죠
그리고 그 안에는 임시 포트가 있었다는 걸 잊지 마세요
NACL은 상태가 없고요(stateless), 그래서 인바운드와 아웃바운드 규칙이 항상 평가되는 반면에 보안 그룹 규칙은 상태를 갖고 있어요(stateful) > 뭔뜻이냐면 '서버가 클라이언트의 상태를 보존'해서 어딘가에 클라이언트의 정보를 저장하고 통신때마다 읽는다는 뜻임.
즉 인바운드가 허용되면 아웃바운드가 자동으로 허용되고, 그 반대로도 허용되죠
그리고 보안 그룹 규칙은 EC2 인스턴스 수준에서 적용되요
VPC 피어링은 2개의 VPC를 연결할 때 아주 유용하고요, 중첩되지 않는 CIDR가 있을 경우에만 가능해요 그리고 VPC 피어링 연결은 이행성이 없어요,
그래서 3개의 VPC를 연결하려면 여러분은 3개의VPC 피어링
연결이 필요하죠
VPC 엔드포인트를 이용해서 우리는 Amazon S3, DynamoDB, CloudFormation 등 여러분이 원하는 AWS 서비스에
VPC 안에서 프라이빗 액세스를 할 수 있어요
우린 Amazon S3와 DynamoDB에 게이트웨이 엔드포인트가 있는 걸 보았고요, 나머지는 모두
인터페이스 엔드포인트였어요
VPC Flow Logs는 우리가 VPC 안의 모든 패킷에 관한 로그 수준 메타데이터를 얻는 방법이었어요
그리고 수락과 거부 트래픽에 관한 약간의 정보를 얻었죠
VPC Flow Logs는 VPC 서브넷 또는 ENI 수준에서 생성될 수 있고요, 그것들을 분석하고 Amazon S3로 전송해서
Athena를 이용해 분석할 수 있어요, 또는 CloudWatch Logs로 전송해서 예를 들어 CloudWatch Log Insights를 이용해서 분석할 수 있죠

*시험에 나올만한 문제(네트워킹 비용 관련)
RDS 데이터베이스 읽기전용 복제본 생성을 하고 분석을 하고싶다는 상황
- 가장 저렴하게 생성하는 법 : 같은 AZ에 생성한다면 한 DB에서 다른 DB로 복제하는 데는 비용x
but 다른 AZ에 생성한다면 GB당 1센트를 지불해야 한다.(데이터 수송비용)

송신 트래픽(이그레스 트래픽)은 아웃바운드 트래픽입니다
AWS에서 밖으로 나간다는 뜻이죠
수신 트래픽(인그레스 트래픽) 은 인바운드 트래픽이고요
외부에서 AWS로 들어오는 트래픽으로 보통 무료입니다
AWS로 데이터를 보내는 건대부분 무료지만
밖으로 데이터를 내보낼 땐 비용이 드니까
인터넷 트래픽을 최대한 AWS 내부에 두고
비용을 최소화해야겠죠
데이터베이스가 있고 기업 데이터 센터에 사용자가 있을 때
기업 데이터 센터에서 애플리케이션을 실행한다면
애플리케이션은 데이터베이스에 쿼리를 보내
데이터베이스에서 데이터 100MB를 회수한 뒤
집계와 계산까지 마치고 나면
사용자에게 쿼리 결과 50KB만을 반환한다고 가정해 봅시다

송신 트래픽이 엄청나게 발생해서
비용도 아주 많이 들겠죠
데이터 100MB를 AWS에서 가져와
인터넷을 통해 기업 데이터 센터로 전송했으니까요
현명한 방법은
EC2 인스턴스의 AWS Cloud로 애플리케이션을 이동하는 겁니다
동일한 가용 영역에 데이터를 두니까
DB 쿼리 데이터 전송이 무료가 되겠죠
100MB가 모든 계정에 생기지 않고
쿼리 결과 50KB만 전송되기 때문에
비용이 훨씬 절감됩니다
송신 비용을 최소화하는 거예요

송신 트래픽 네트워크 비용을 최소로 줄이는 또 다른 방법은
Direct Connect를 사용할 경우
Direct Connect 로케이션을
동일한 AWS 리전으로 설정해
비용을 아끼는 겁니다
그렇다면 S3 데이터 전송 비용은 얼마나 될까요?
미국에서는 어떤지 살펴봅시다
S3 버킷으로 들어가는 데이터는 수신 트래픽이므로
전부 무료입니다
하지만 Amazon S3에서 컴퓨터로
인터넷을 통해 데이터를 내려받는다면
송신 트래픽 1GB마다 9센트를 지불하게 됩니다
화면에서 보시다시피요
S3 전송 가속화를 사용한다면
전송 속도가 50-500% 정도 빨라지는데
데이터 전송에
추가 비용이 발생합니다
GB당 4-8센트가 청구돼요
한마디로 전송 가속화 기능은 비용이 듭니다
S3에서 CloudFront로 발생하는 트래픽은 무료입니다
S3 버킷상에 CloudFront 배포를 생성하면
S3와 CloudFront 사이에서 데이터를 주고받는 건 무료예요
반면 CloudFront에서 인터넷으로 전송할 때는
GB당 8.5센트가 청구됩니다
Amazon S3보다는 약간 저렴하죠
그 외에도 캐싱 기능을 얻게 되는데요
데이터 액세스 지연 시간이 짧아지며
요청을 보낼 때마다
비용이 절감됩니다
S3 버킷에 요청이 들어오면
비용을 부담해야 하는데
Amazon CloudFront로 들어오면 일곱 배나 저렴하답니다
사용 사례에 적합하다면 Amazon S3상에서
CloudFront를 사용해 비용을 절약할 수 있겠죠
마지막으로 Amazon S3 버킷에 리전 간 복제를 수행한다면
GB당 2센트를 지불해야 합니다
미국 상황을 살펴봤는데
비용은 시간이 지나면서 혹은 지역에 따라 달라질 수 있습니다
어떤 서비스는 추가로 비용이 발생한다는 점과 함께
비용이 서로 어떻게 관련되는지 기억해 두세요
이어서 NAT Gateway와
게이트웨이 VPC 엔드 포인트 비용을 분석해 봅시다
리전에 VPC가 있고 사설 서브넷 두 개는
각기 다른 유형의 EC2 인스턴스를 사용합니다
둘 다 Amazon S3 버킷으로 데이터를 액세스하고자 할 때
공용 인터넷을 사용하는 방법이 있습니다
NAT Gateway가 있는 공용 서브넷을 생성해야 하는데
이때 인터넷 게이트웨이로 향하는 라우트가 필요합니다
라우팅 테이블을 사용해서 라우트를 구축하면
EC2 인스턴스에서
NAT Gateway와
인터넷 게이트웨이를 지나 인터넷과 직접 연결됩니다
Amazon S3 버킷 내 데이터를 이제 인터넷에서 액세스할 수 있어요
이때 NAT Gateway 요금은
시간당 0.045달러예요
NAT Gateway에서 처리되는 데이터 1GB마다 0.045달러가 들고
S3로 리전 간 데이터 송신 비용은 시간당 0.09달러가 청구되는데
동일한 리전이라면 비용이 발생하지 않습니다
만약 VPC 엔드 포인트를 갖추고 있다면

Amazon S3 버킷에 비공개로 데이터를 액세스할 수 있고
다른 라우팅 테이블을 생성할 겁니다
이때 VPC 엔드 포인트에 액세스하려면
여기로 연결되는 라우트만 설치하면 돼요
데이터는 사설 서브넷에서
VPC 엔드 포인트와 S3 버킷으로 직접 흐릅니다
게이트웨이 엔드 포인트는 사용료가 들지 않아요
동일한 리전에서 S3로 데이터를 주고받을 때
데이터 1GB마다 1센트를 지불하면 됩니다
그러니까 NAT Gateway보다
VPC 엔드 포인트를 쓰는 게 훨씬 저렴합니다
 

#전체 VPC를 지키는 보안
AWS network Firewall !! 
AWS Network Firewall은 계층 3에서 계층 7까지 보호하는데
모든 방향에서 들어오는 모든 트래픽을 검사하는 거죠
VPC 간 트래픽 인터넷 아웃바운드, 인터넷 인바운드
Direct Connect나 Site to Site VPN 연결까지 포함됩니다
그림으로 다시 보면 인터넷과의 모든 트래픽과
피어링된 VPC와의 모든 트래픽
Direct Connect와 Site to Site VPN을 오가는 모든 트래픽을 보호합니다
규칙을 정의하기만 하면 모든 동작을 제어할 수 있는 거죠
내부적으로 Network Firewall은 AWS Gateway Load Balancer를 사용합니다

단, 타사 어플라이언스가 아니라
AWS에서 자체 어플라이언스를 통해 트래픽을 관리하므로
Network Firewall에 자체 규칙을 갖추고 있습니다
이 규칙들 역시 중앙 집중식으로 관리되며 여러 계정과 VPC에 적용됩니다
AWS Firewall Manager의 역할이라고 할 수 있죠

Network Firewall에서는 네트워크 트래픽을 세부적으로 관리할 수 있는데
VPC 수준에서 수천 개의 규칙을 지원하고
수만 IP를 IP와 포트별로 필터링할 수 있습니다
프로토콜별로도 필터링할 수 있죠
아웃바운드 통신에서는 SMB 프로토콜을 비활성화하는 식으로 말이죠

도메인별로도 필터링할 수 있어서
VPC의 아웃바운드 트래픽에 대해서는
기업 도메인에만 액세스를 허용하거나
타사 소프트웨어 리포지토리에만 액세스를 허용할 수도 있습니다

regex 등을 이용해서 일반 패턴 매칭도 가능하고
트래픽 허용, 차단, 알림 등을 설정해
설정한 규칙에 맞는 트래픽을 필터링할 수도 있죠
또 활성 플로우 검사를 통해
침입 방지 능력을 갖출 수 있습니다
AWS가 관리하는 게이트웨이 로드 밸런서처럼 말이죠
모든 규칙 일치는 Amazon S3와 CloudWatch Logs 및
Kinesis Data Firehose로 전송해 분석할 수 있습니다
Network Firewall을 알아봤습니다
이 방화벽은 VPC 수준에서 설정할 수 있다는 점 기억하시고
트래픽 필터링과 플로우 검사를 지원한다는 점도 기억해 두세요
 

/32가 제일 적다
/16가 다음으로적다 

-기업 네트워크의 크기는 10.0.0.0/8이고, 위성 사무실의 크기가 192.168.0.0/16입니다. 추후 두 네트워크를 연결할 계획이라면, AWS VPC에 적합한 CIDR은 다음 중 무엇인가요?
CIDR이 겹쳐서는 안 되며, AWS 내 최대 CIDR의 크기는 /16입니다.

2 4 8 16 32 64
32-6 26

보안 그룹은 ................. 레벨에서 운용되는 반면, NACL은 ................. 레벨에서 운용됩니다.
> EC2인스턴스 ,  서브넷

인터넷 게이트웨이를 VPC에 연결했으나, 여전히 인터넷을 통한 EC2 인스턴스 액세스가 불가능한 상태입니다. 이런 경우, 가능성이 있는 원인이 아닌 것을 고르세요
VPC와 IGW가 연결되면 보통 액세스가 되어야하는데, 이때는 보안그룹일수 있음
>보안 그룹은 상태를 유지하기 때문에, 트래픽이 나갈 수 있다면 다시 들어갈 수도 있습니다.

IPv4를 가진 사설 서브넷에 있는 EC2 인스턴스에 인터넷 액세스를 제공하려 합니다. 이 솔루션을 사용하면 필요한 관리의 양은 최소가 되어야 하며, 원활하게 스케일링이 되어야 합니다. 무엇을 사용해야 할까요?
>nat gateway(완전히 관리해줌)

VPC A와 VPC B 사이에 VPC 피어링이 활성화되어 있으며, VPC A에 대해 라우팅 테이블이 업데이트되어 있는 상황입니다. 그러나 EC2 인스턴스 간의 통신이 불가능한 상태입니다. 이런 경우, 가능성이 있는 문제는 무엇인가요?
>피어링은 A뿐만아니라 B도 라우팅업데이트를 요하므로 VPC B의 라우팅테이블을 확인할것

기업 데이터 센터와 AWS 계정 내 VPC A 사이에 Direct Connect 연결을 설정했습니다. 기업의 데이터센터가 다른 AWS 리전에 있는 VPC B로도 액세스할 수 있어야 합니다. 어떻게 해야 할까요?
>Direct Connect Gateway의 주요 사용 사례입니다. 

VPC 엔드 포인트를 사용할 경우, 인터페이스 엔드포인트가 아닌 게이트웨이 엔드 포인트를 갖는 두 개의 AWS 서비스는 무엇인가요?
>이 두 개의 서비스는 VPC 게이트웨이 엔드 포인트를 가지며(기억해 두세요), 이들을 제외한 나머지는 모두 인터페이스 엔드 포인트를 가집니다(Private Link에 의해 구동, 즉, 사설 IP).
Amazon S3 및 DynamoDB

VPC에 새로운 서브넷을 생성할 때마다, AWS는 5개의 IP 주소를 예약합니다. CIDR 10.0.0.0/24로 서브넷을 생성할 경우, 다음 중 ....................를 제외한 IP 주소들이 예약됩니다
>10.0.0.4 

여러분은 3개의 VPC A, B, C가 있습니다. 3개의 모든 VPC 간에 VPC 피어링 연결을 설정하려고 합니다. 어떻게 해야 할까요?
>3개의 VPC피어링 설정하기 (AB,AC,BC) 해야함.

VPC의 IP 트래픽에 대한 정보는 어떻게 포착할 수 있을까요?
>VPC Flow Logs는 VPC 기능으로, VPC에서 네트워크 인터페이스로 드나드는 IP 트래픽에 대한 정보를 포착할 수 있게 해줍니다.

기업의 데이터 센터와 AWS 간의 500Mbps Direct Connect 연결을 위해서는, .................. 연결을 선택해야 합니다.
>Hosted Direct Connect 연결은 50Mbps와 500Mbps를 지원하며, 최대 10Gbps까지 지원합니다.

기업의 온프레미스 데이터 센터와 AWS Cloud 내 VPC 사이에서 AWS 사이트 대 사이트 VPN 연결을 설정할 경우, 이 연결을 구성하는 데에 있어서 가장 중요한 두 구성 요소가 되는 것은 무엇인가요?
>가상 프라이빗 게이트웨이와, 고객 게이트웨이.

여러분의 기업은 미국 전역에 몇 개의 온프레미스 사이트를 갖고 있습니다. 이 사이트들은 현재 프라이빗 연결을 사용해 연결되어 있으나, 최근에는 프라이빗 연결 제공자가 상당히 불안정해져 IT 아키텍처의 일부가 오프라인 상태가 되었습니다. 여러분은 온프레미스 사이트들을 연결하기 위해 공용 인터넷을 사용하는 백업 연결을 생성하여, 제공 업체에 문제가 발생한 경우 장애 조치로 사용을 하려 합니다. 어떤 방법을 추천할 수 있을까요?
>AWS VPN CloudHub는 AWS VPN을 통한 다수 사이트 간의 안전한 통신을 가능하게 해줍니다. 이는 VPC와 함께, 또는 VPC 없이 사용할 수 있는 단순한 허브 및 스포크 모델로 운용됩니다.

온프레미스 기업의 데이터 센터와 AWS Cloud 간의 전용 연결을 설정해야 합니다. 이 연결은 프라이빗이어야 하고, 지속적이어야 하며 트래픽이 인터넷을 통해 이동해서는 안됩니다. 이 경우, 다음 중 어떤 AWS 서비스를 선택해야 할까요?
>aws direct connect
(참/거짓) Direct Connect 연결을 사용해, 공용 및 프라이빗 AWS 리소스 모두에 액세스할 수 있습니다. 참

온프레미스 데이터와 AWS 클라우드 사이에 설정된 AWS Site-to-Site VPN 연결의 처리량을 단일 IPsec 터널의 최대 대역폭인 1.25Gbps보다 크게 확장하려고 합니다. 어떻게 해야 합니까?
>트랜짓 게이트웨이를 사용한다

회사에서 사내용 데이터 센터와 AWS 사이에 Direct Connect 연결을 구성했습니다. Direct Connect 연결에 문제가 있을 경우를 대비하여 경제적이고 안전한 백업 연결을 준비해야 한다는 요구 사항이 있습니다. 가장 경제적이고 안전한 솔루션은 무엇입니까?
>site to site vpn을 백업연결로 구성한다.

한 웹 애플리케이션이 오토 스케일링 그룹으로 관리하는 EC2 인스턴스 세트에 호스팅되어 있습니다. 애플리케이션은 애플리케이션 로드 밸런서(ALB)를 통해 배포되고 있습니다. EC2 인스턴스와 ALB는 모두 CIDR이 192.168.0.0/18인 VPC에 배포됩니다. ALB만 80번 포트에서 액세스할 수 있도록 EC2 인스턴스의 보안 그룹을 구성하려면 어떻게 해야 합니까?
>소스를 ALB 보안그룹으로 지정, 80번 포트 인바운드규칙을 추가
이것이 ALB에게만 EC2 인스턴스 접속을 허용하는 가장 안전한 방법입니다. 규칙에서 보안 그룹이 참조하는 것은 아주 강력한 규칙이며 이를 활용한 시험 문제가 다수 출제됩니다. 따라서 이와 관련된 개념을 완벽히 숙지하시기 바랍니다.

### 23.10.20 (fri)
#재해 복구 세션 (Disaster Recovery) DR
복구 시점 목표: RPO
복구 시간 목표: RTO 
 

RPO는 얼마나 자주 백업을 실행할지, 어느정도 과거로 돌릴 지를 따지는 지표이다.
RPO는 한시간, 분 등 원하는대로 설정이 가능하다. 얼마나 데이터손실을 감당할지 사용

RTO는 재해 발생 후의 상황을 복구할때 사용된다.
재해발생시점_Disaster 과 RTO의 시간 차는 애플리케이션의 다운타임이다.
다운타임을 24시간으로 두기도, 1분으로 설정하는 경우도 있고

RPO나 RTO 최적화는 시간 간격이 짧을 수록 비용이 높아진다는 공통점을 가진다.

1. 백업 및 복구) _ RPO와 RTO가 높다(오래걸린다), 비용이 싸다
-Snowball을 사용하면 RPO가 대략 일주일이 된다_DC가 사라지면 한주치 데이터를 잃음.
-AWS Cloud; EBS와 Redshift , RDS가 해당된다. 정기적 스냅샷을 예약하고 백업을 하면 스냅샷 간격에 따라 RPO가 달라짐. 바로 복원하면 데이터복구에 시간이 걸리므로 RTO가 커질테지만, 값이 저렵해서 백업이나 복구전략을 사용함.

2. 파일럿 라이트) _ RPO와 RTO가 백업,복구보다는 낮다, 크리티컬코어 보조에만 사용한다
돌리는 애플리케이션의 축소판이 클라우드에서 항상 실행되고, 이게 크리티컬 코어가 된다.
이를 파일럿 라이트라고 하며, 크리티컬시스템이 계속 작동하고있기 때문에 속도가 빠르다
이때 RPO와 RTO가 낮아집니다	
비용은 여전히 관리해야 하고요

3. 웜 대기(웜 스탠바이) _ RPO 와 RTO가 낮지만 비용이 더 드는 방식.
시스템 전체를 실행하되, 규모를 최소한으로 가동해서 대기하는 절전형이다.
재해가 발생하면 프로덕션 로드로 확장이 빠르다.
EC2 오토 스케일링 그룹이
최소 용량으로 가동하며
기업 데이터 센터 데이터베이스와 소통합니다
ELB는 준비된 상태이고요
재해가 발생하면 웜 대기 전략이 있기 때문에
Route 53를 사용하여 ELB로 장애 조치 해서
애플리케이션이 데이터를 가져오는 곳을 변경하는 작업도 가능
-RPO 와 RTO가 낮다
-비용이 더 든다. ELB와 EC2 오토스케일링이 동시에 실행됨

4.Multi site/ Hot site 접근 ) RPO, RTO가 몇 분, 몇 초 정도로 굉장히 낮다, 그만큼 비용이 엄청남
AWS와 온프레미스에서 두 완전 프로덕션 스케일을 얻게 된다.
온프레미스 센터의 완전한 규모+ 데이터복제를 진행하는 동시에
AWS 데이터센터 완전 프로덕션 규모가 된다. 이미 실행중인 핫사이트가 있으므로
Route53에 기업의 DC와 AWS Cloud에 요청을 라우팅할 수 있는데이를
Active-active type setting 이라고 한다(액티브 액티브 유형설정)
>비싼대신 동시에 장애조치할 준비가 되어있어서 ,다중 DC 유형 인프라를
실행할 수 있어 아주 좋습니다

>>>시험에서는
특정한 상황을 제시한 후 최선책을 물어봅니다
백업 및 복구와 파일럿 라이트 중 뭐가 더 적합한지
다중 사이트와 핫 사이트 중 뭘 추천하는지 묻는 방식으로
문제가 출제돼요 웜 대기도 물을 수 있고요

#DR 재해복구 팁 
백업에는  EBS 스냅샷  /   RDS로 자동화된 스냅샷, 백업 / S3, S3 IA, Glacier에 스냅샷 규칙적 푸시 / 수명 주기 정책 실행  /  리전간 복제 /  등이 있다.
-특히 온프레미스>클라우드로 데이터 공유시에는 Snowball과 Storage Gateway를 사용

-고가용성을 위해서:  Route 53을 사용해 DNS를 다른 리전으로 옮긴다. / 다중 AZ를 실행한다- RDS 다중 AZ, Elasticache 다중 AZ, EFS , S3 이 있고 기본적으로 가용성이 높다. 
네트워크 고가용성을 위해서: 온프레미스>AWS연결시 Direct connect를 실행할수도 있다.
Direct connection에서의 네트워크 장애 시 복구옵션으로 Site-to-site VPN을 사용 가능하다.

-복제 : RDS리전 간 복제, 오로라 글로벌 데이터베이스로 복제 가능하다
온프레미스 데이터베이스를 RDS로 옮기기가 가능.
Storage Gateway도 존재

-자동화: cloudformation과 beanstalk가 빠른 환경생성을 도움. 또한 만약 실패 경보가 뜨면, EC2 인스턴스와 CloudWatch를 복구/재시작할 수 있다.
Lambda는 사용자 맞춤 자동화에 유용하다. 

# Database Migration service / DMS
빠르고 안전하게 데이터베이스에서 aws로 마이그레이션이 되며, 복원력있고, 자가치유가 가능하다. /다중AZ는 복원력과 내결함성을 늘려준다~
데이터베이스 소스는 마이그레이션을해도 남아있으며 사용가능하다.
지원엔진=oracle>oracle 동종 마이그레이션 가능/ microsoft SQL > Aurora 이종 도 가능.
CDC / Change data capture을 통한 지속적인 데이터복제도 가능.
* DMS를 사용하려면 EC2인스턴스를 꼭 만들어야하고, 대신 복제작업을 수행한다.
>소스 DB와 타깃 DB의 엔진이 다른경우 취해야 할 것

#바로 AWS SCT 이다 /  aws Schema Conversion Tool _스키마 변환 도구 
-OLTP의 예시 (Online Transaction Processing) : 네트워크상 온라인 사용자들의 트랜잭션 처리, 대규모보단 소규모 정교한 데이터, 기능 자체에 중심을 둔다
SQL server나 Oracle > MySQL, PostgreSQL, Aurora 

-OLAP의 예시 (Online Analytical Processing) :데이터웨어하우스 등 시스템과 연관해서 데이터분석, 의미있는 정보로 치환하는 분석방법. 기능보다는 목적과 주제에 중점을 둔다. 
Teradata, oracle > amazon redshift 
>>SCT가 사용되는방법
 
소스DB > DMS+SCT > 타깃DB(다른엔진)
**다만 동일한 데이터베이스 엔진간에 마이그레이션 시는 SCT를 사용하지 않음.
한 az에 DMS 레플리카 인스턴스가 있고, 그 인스턴스를 다시 다른az에 동기화복제하면 스탠바이 레플리카가 된다. > I/O멈춤을 없애고 레이턴시 스파이크를 최소화, 데이터 여분을 공급한다.
* RDS MySQL을 Aurora MySQL로 옮기고자할때
첫 번째 방법은 RDS MySQL 데이터베이스의 스냅샷을 생성해서
이 스냅샷을 MySQL Aurora 데이터베이스에서 복원하는 것입니다
이때 다운타임이 발생하겠죠 가동을 중지한 뒤
Aurora로 마이그레이션해야 할 테니까요

두 번째는 좀 더 지속적인 방법으로
Amazon Aurora 읽기 전용 복제본을
RDS MySQL에 생성하는 것입니다
복제본의 지연이 0이 되면
Aurora 복제본이 MySQL과 완전히 일치한다는 뜻이니
이때 복제본을 데이터베이스 클러스터로 승격시키면 됩니다
이 방법은 데이터베이스 스냅샷보다는 시간이 많이 걸리고
복제본 생성과 관련한 네트워크 비용도 발생할 수 있습니다

MySQL 데이터베이스가 RDS 외부에 있는 경우에는
Percona XtraBackup 기능을 사용하여 백업할 수 있습니다
백업 파일을 생성하여 Amazon S3에 두면
Amazon Aurora의 기능을 사용해서
새로운 Aurora MySQL DB 클러스터로 백업 파일을 가져올 수 있습니다
이 기능은 Percona XtraBackup에서만 사용할 수 있습니다

또 다른 방법은 mysqldump 기능을
MySQL 데이터베이스에서 실행하여
기존 Amazon Aurora 데이터베이스로 출력값을 내보내는 겁니다
이 경우에는 시간이 많이 들고 Amazon S3를 사용하지 않죠

마지막 선택지는 Amazon DMS를 이용해서 두 데이터베이스가 가동되는 채로
이 데이터베이스 간 지속적인 복제를 진행하는 방법이 있습니다

PostgreSQL에서도 방법은 같습니다
RDS 쪽은 유사한 방법으로
스냅샷을 생성해 Amazon Aurora 데이터베이스에서 복원하거나
PostgreSQL의 읽기 전용 복제본을 Amazon Aurora에 생성하여
복제 지연이 0이 될 때까지 기다렸다가 데이터베이스 클러스터로 승격시킬 수 있죠
외부 PostgreSQL 데이터베이스를 Aurora에 마이그레이션하는 경우
백업을 생성한 다음
해당 백업을 Amazon S3에 두고 데이터를 가져오기 위해
aws_s3 Aurora 확장자를 사용해서
새로운 데이터베이스를 생성하는 방법도 있습니다
또는 DMS를 통해 PostgreSQL에서 Amazon Aurora로 지속적 마이그레이션이 가능합니다

#AWS가 제공하는 온프레미스 전략 (온프레미스와 관련된 것)
>> EC2에대한 VM가져오기,내보내기 / ADS , migration hub DMS,SMS서비스 등
1. Application Discovery Service AWS와 같은 마이그레이션 서비스
온프레미스의 정보를 모아주고 마이그레이션을
계획할 수 있게 해 주는 서비스인데요
상위 수준의 서비스이지만 서버 사용량 정보와
종속성 매핑에 대한 정보를 제공하죠 온프레미스에서 클라우드로
대량의 마이그레이션 할 때 유용

2. 다음으로 DMS , 즉 Database Migration Service 
온프레미스에서 AWS로의 복제를 허용하고
AWS에서 AWS로, AWS에서 온프레미스로 복제를 허용하죠
꽤 유용한데요
MySQL나 Postgres 데이터베이스가 온프레미스에 있고
AWS로 워크로드를 옮기고 싶다면 DMS를 써서
그동안 데이터베이스를 복제하고 준비가 됐을 때
AWS만을 사용해서 처리할 수 있기 때문입니다
또 좋은 점은 Oracle, MySQL DynamoDB 등
다양한 데이터베이스들과 함께 작동해서
사용하기에 편리

3. 마지막으로 SMS, 즉 AWS Server Migration Service가 있습니다
SMS는 온프레미스의 라이브 서버들을 AWS로 증분 복제할 때 쓰는데요
AWS로 볼륨을 직접 복제할 수 있습니다. 이는 보다 지속적인 복제 유형에 적용되는
증분 복제죠

# AWS backup
-Vault Lock 기능이란 게 있다. 이는 WORM(write onece read many)라는 기능을 모든 백업에 적용한다. 당신이 스토어를 백업볼트에 둘때.
-이것은 백업에 한겹의 방어 레이어(층)를 더 둘러서 지켜주는데, 한번 실행되면 아무리 루트유저라도 이 백업을 삭제가 불가능하다.(볼트락 정책때문)

#Application Migration Service (MGN)이라는게 있다.
Lift-and-Shift (리호스트하는것) 솔루션이라고도 하는데, 이는 물리적 가상 또는 클라우드에 있는 다른 서버를 간단하게 AWS에 클라우드 네이티브로 실행해 마이그레이션하는 것이다.
어플리케이션 마이그레이션 서비스를 실행하면, 복제 에이전트가 디스크를 연속으로 복제한다. 


#HPC를 돕는 AWS 서비스   # HPC
<데이터 관리 및 전송관련>
-AWS direct connect : GB/s로 데이터를 전송+ 개인 보안네트워크 
-Snowball &Snowmobile : PB급 데이터의 전송에 탁월
-AWS Datasync : 온프레미스와 [ S3, EFS, FSx for windows] 사이에서 많은양의 데이터전송
<컴퓨팅, 네트워킹 관련>
-EC2 인스턴스 : 최적화 및 스팟인스턴스나 스팟플릿으로 비용절감, 오토 스켈링
-EC2 인스턴스가 서로 통신해야하거나, 분배된 상태로 동작시에 클러스터를 형성하여 배치그룹간 최고의 네트워크 성능을 끌어냄 (low latency, 10Gbps 네트워크)
>EC2 Enhanced Networking (SR-IOV) :더넓은 대역폭, 높은 PPS(패킷 퍼 세컨드),지연시간짧음
인핸스드 네트워킹을 사용하는방법은 두가지가 있다. _(단일 루트i/o가상화_single root i/o virtualization)
1. ENA (엘라스틱 네트워크 어댑터)로 네트워킹 속도를 100Gbps까지 늘림
2. intel 82599 VF 로 10Gbps-옛방식(레거시)

>Elastic Fabric Adapter (EFA) 라는 방법도 있다
(HPC,고성능 컴퓨팅을 위해서 ENA가 개선된버전)_only for linux
노드간 소통이나 밀집된 워크로드의 처리에 좋음
ENA가 사용하는게 Message Passing Interface(MPI)표준이기 때문이다.
linux os를 우회하여 안정적이고 저지연의 송신을 보장

***ENA,  EFA와 ENI의 차이점****
ENA 탄력적 네트워크 인터페이스(ENI)는 VPC 네트워킹을 지원하는 데 필요한 기존 방식의 IP 네트워킹 기능을 제공
EFA ENI는 ENA ENI의 모든 기능을 제공할 뿐만 아니라 애플리케이션이 확장 프로그래밍 인터페이스를 사용하여 인스턴스 커널(OS 우회 통신) 없이 EFA ENI와 직접 통신할 수 있도록 하드웨어 지원도 제공
EFA ENI는 이와 같은 고급 기능을 제공하므로 인스턴스를 시작할 때나 중지된 인스턴스에만 연결할 수 있다.

>ENI (Elastic Network Interface): VPC의 논리적 네트워킹 구성요소로써, 실행중 인스턴스에 '핫 연결', 인스턴스 중지될때 '웜 연결', 인스턴스 시작될때 '콜드 연결'을 한다
>ENA (Elastic Network Adapter): 더넓은 대역폭과 더높은 초당패킷 성능을 제공, 인스턴스간 지연시간(레이턴시)을 지속적으로 낮춘다.
>EFA (Elastic Fabric Adapter): 기능이 추가된 ENA로써 고객이 AWS에서 대규모 노드간 통신이 필요한 애플리케이션을 실행할 수 있도록 하는 EC2인스턴스 용 네트워크 인터페이스이다.
<언제쓰이나요?>
ENI: 고성능의 요구사항이없을 때 사용하는 기본유형, 모든 인스턴스유형과 사용됨
ENA: 더 높은 대역폭과 낮은 인스턴스간 지연시간이 필요한 사용사례에 필요. 제한된 인스턴스유형만 지원된다.(HVM_하드웨어 가상머신에만 해당됨)
EFA: 고성능 컴퓨팅/ MPI나 ML사용사례/ 밀접하게 결합된 워크플로의 애플리케이션에 사용.
모든인스턴스 유형과 사용됨. 클러스터 배치그룹(성능최대화)

**AWS Well-Architected Framework **WAFR
클라우드에서 워크로드를 설계하고, 실행하기 위한 주요 개념, 설계원칙과 아키텍처 관련 모범사례를 설명하는 백서이다. 6가지 원칙이 있음.
>1.운영 우수성 원칙
운영 우수성 원칙은 비즈니스 가치를 제공하고 지속적으로 프로세스와 절차를 개선하기위해 시스템을 실행 및 모니터링에 중점을 둔다. 주로 변경 자동화, 이벤트 응답, 일상적인 작업을 관리하기위한 표준의 정의 등을 다룸. 알람
>2.보안 원칙
보안 원칙은 정보와 시스템을 보호하는 데 중점을 둔다. 데이터의 기밀성, 무결성, 권한관리를통한 사용자 작업식별 및 관리, 시스템 보호와 보안이벤트 탐지를 위한 제어 설정 등 항목을 다룸.
>3.안정성 원칙(신뢰성)
안정성 원칙은 워크로드가 의도하는 기능을 원하는 시점에 올바르고 일관적으로 수행하도록 하는 데 중점을 둔다. 회복력,복구력 있는 워크로드는 장애에서 빠르게 회복되고 비즈니스와 고객의 요구사항을 충족한다. 분산시스템 설계, 복구 계획, 변경의 처리방법등 항목을 주로 다룬다.
>4.성능 효율성 원칙
성능효율성 원칙은 IT및 컴퓨팅 리소스를 효율적으로 사용하는데 중점을 둔다. 워크로드의 요구사항에 적합한 리소스 유형 및 크기를 선택(인스턴스 유형이나 쓸 서비스등의 선택), 성능모니터링과 정보에 입각해서 의사결정을 하고 비즈니스 요구사항에 맞춰 효율성유지하는 방법을 다룸
>5.비용 최적화 원칙
비용 최적화원칙은 불필요 비용을 피하는데 중점을 둔다. 지출영역 파악 및 통제, 적절하고 적합한 수의 리소스 유형을 선택, 시간대별 지출 분석과 초과지출 없는 조정같은 항목을 다룬다.
>6. 지속 가능성 원칙



# Storage
EBS는 io2 Block Express에서 256,000 IOPS까지 규모가 늘어난다.
Instance Store: 수백만단위 IOPS를 가지고, EC2인스턴스에 연결되며 저지연이다.
-네트워크스토리지도 있따
AWS S3: 대용량 Blob 데이터를 저장할때 사용, 파일시스템 말고 큰 객체의 저장을위함
AWS EFS : 전체 크기에 따라서 IOPS가 확장된다. 혹은 프로비저닝된 IOPS를 사용한다.
AWS FSx for Lustre: HPC전용 파일 시스템이 있는데 최적화되어 수백만의 IOPS를 제공, 백엔드에서 S3로 제공된다.

#Automation(자동화) and Orchestration(오케스트레이션,조율)
AWS Batch: 다중화된 노드 병렬작업을 수행할 수 있고 여러 EC2에 걸쳐 작업이 가능. 작업예약과 EC2인스턴스 실행이 쉬워진다.>HPC에서 많이 사용함.
AWS ParallelCluster: 클러스터 관리도구로, HPC를 AWS에 배포한다. 텍스트 파일로 구성해서 aws로 deploy하는것이다. 그리고 VPC, subnet, cluster 타입과 instance타입을 자동화함.
**AWS ParallelCluster는 EFA와 함께 사용해요(elastic fabric adapter_hpc) 왜냐면, 클러스터 상에서 EFA를 활성화시키는 매개 변수가 텍스트 파일안에 내재되어있기 때문이다.
따라서 네트워크 성능이 향상, HPC클러스터를 구현할 수 있다.
>>>HPC는 단일 서비스가 아니라 여러 옵션과 서비스들의 결합임을 알아야 한다.

#EC2 인스턴스에서 고가용성을 뽑기
대기 인스턴스를 만든다 > 뻗었다는 것을 모니터링해줄 이벤트(cloudwatch event)를 설정해야한다. >cloudwatch에 대한 Lambda 함수를 세팅함(API호출해줄 함수)
이것은 백엔드에서 진행되므로 일반 사용자는 진행상황을 모른다.

-다음으로 오토스케일링 그룹이 있다.(ASG)
인스턴스의 그룹을 min1~max6등으로 설정해서 가용영역을 2개보다 크거나 같게 설정해둔다. 탄력적 ip가 할당되어 연결할 수 있도록함. API를 호출할 역할이 있는지 설정해준다.
+ASG와 EBS를 연결지을수도 있다.EBS Volume과 연결된 EBS 스냅샷을 찍고, ASG가 수명주기 후크를 사용하니 스냅샷을 찍는 스크립트에 따라 EC2인스턴스가 종료되자마자 스냅샷이 발동되어 EBS볼륨에 문제생겼음을 알 수 있다.>ebs볼륨 생성 및 부착(ASG)이 수명주기 후크로 실행되어 EBS볼륨을 새로 만든다.

~~~~~~~~~~~~~~~~~~~~~~~~~~

# CloudFormation 
클라우드 포메이션은 리소스에 대한 인프라의 윤곽을 구분짓는 방법이다.(선언적 구분)
당신이 
1. 보안그룹을 원한다
2. EC2 인스턴스 2개를 이 보안그룹에 사용할 것을 원한다
3. S3 bucket을 원한다
4. Load Balancer(ELB) 를 이 머신들 앞에 원한다.
라고하면, 
CloudFormation은 이 모든것을 자동으로 생성한다. 
정한 순서와 구성한 그대로.

< cloudformation의 장점>
1. 코드로 구축, 구성된다 (리소스를 수동으로 안해도됨)
2.비용적으로 매우 훌륭하다. 클라우드포메이션 탬플릿으로 리소스 비용을 쉽게 예측도함.
3.비용절감 전략: 어떤 환경에서 오후5시에 자동으로 모든 탬플릿을 삭제하도록 예약도 가능.
4. 생산성이 좋다 : 인프라를 그때그때 파괴하고, 다시 만들어낼 수 있다. 탬플릿을위한 다이어그램을 만들 수도 있다. 선언적 프로그래밍이 가능하다(하나하나 명령,조율이 필요없다)
5. 무엇보다, 하나하나 다 만들지 않아도 됨 : 웹에 존재하는 기존 템플릿, 문서등을 활용가능.
6. 모든 AWS 리소스들을 지원함 : CloudFormation은 AWS에서 코드형 인프라의 기반이 된다.
 
이렇게 시각화도 해준다.
코드형 인프라가 있을때 이를 모두 보여준다. 관계, 쓰인 리소스들을 전부 시각화로 볼수있음.

# AWS SES / Simple Email Service
완전 관리형 서비스_ 아마존에서 관리해준다
애플리케이션이 SES API나 SMTP 서버를 사용하면,  *SMTP:simple mail transfer protocol 
AWS SES가 사용자들에게 대량으로 이메일을 발송.
>아웃바운드 뿐 아니라, 인바운드 이메일도 허용하므로 답장을 주고받을 수 있음
>이메일을 열었는지 여부를 알려주는 평판대시보드(reputation dashboard), 성과 인사이트, 스팸방지 피드백을 제공 / 이 이메일을 스팸으로 평가했는지도 알 수 있게된다.
=따라서 피드백 루프 결과, 이메일 열었는지 여부 등 통계를 제공
>이메일 전송에 대한 최신 보안기준을 지원, ( DKIM , SPF ) 신뢰도를 검증해 스팸을 막는방법.
*헤더: 받는사람, 보낸사람 필드를의미/ *봉투:실제로 이메일 전송에 사용되는 실제 주소 정보
SPF(Sender Policy Framework)_ 발신자의 봉투를 검사해서 스팸을 가림
-발신자의 서버정보를 사전에 DNS에 공개등록해서, 메일 발신자 정보가 서버정보와 일치하는지 확인해서 이메일 스푸핑(위조해서 수신자를 속임)을 막는  인증기술.
DKIM(Domainkeys Identified Mail)_ 헤더를 검사하여 스팸을 가림
-공개키와 개인키를 이용한다. 메일 헤더에 암호화된 전자서명을 포함해서 수신 측에서 변조여부를 검사할 수 있게 한다.

>유연한 IP 배포기능: 공유ip, 전용ip, 그리고 고객소유 ip / 특정 ip에서 이메일을 보내는것 
>이메일을 애플리케이션을 이용해서 보낼 수 있음: AWS console, API, SMTP 프로토콜을 통해서
사용사례는 이메일 트랜잭션(마케팅 이메일, 대량 이메일 커뮤니케이션에 사용됨)

## SNS와 SES의 차이점??
simple notification service / simple email service
모두 각 메세지의 대상, 내용, 전달 일정을 관리해야한다. 
>aws pinpoint에서는 완전관리형으로 핀포인트서비스 할 수있다.AWS는 SnS 및 SES의 차세대 제품인 Pinpoint를 마케팅 커뮤니케이션 서비스로 밀고있음
>SES는 이메일 발송 전용 서비스라 이메일에 특화되었으며/
 SNS는 다양한 프로토콜을 지원하는 메세지 전송 및 알림서비스이다 물론 email,sms,http/s,sqs,lambda등 프로토콜도 지원함 /

#AWS COST Explorer   / 청구 서비스
AWS 비용 및 시간에 따른 사용량을
시각화하고 이해하며 관리하는 데 사용됩니다
사용자 정의 보고서를 생성해서
비용과 사용량 데이터를 분석할 수 있음.
향후 12개월까지의 사용량을 예측 할 수 있다. 
>월별비용/시간별 리소스 레벨/절감형 플랜 등을 확인할 수 있다.
과거에 지출했던 비용을 기반으로, 청구서 비용에 대한 예측에 확신을 가질 수 있다.

# AWS AppFlow  : 끝과 시작이 있는 서비스.
SaaS 형 애플리케이션과  AWS 사이에 데이터 전송을 안전하게 할 수 있는 서비스이다.
SaaS형 대표예시)google docs, office365 등
소스(시작)는 대표적으로 "Salesforce",SAP,Slack 등이 있다.
AWS S3, AWS Redshift, 혹은 aws가 아닌 SnowFlake와 Salesforce또한 목적지(끝)가 될 수있음 
-빈도: 일정에 따라, 특정이벤트에 대한 응답으로, 또는 주문형으로 통합되도록 정의할 수 있다.
>AppFlow내에서 필터링, 유효성 검사등 데이터변환도 가능 
퍼블릭인터넷으로 암호화/ 프라이빗링크로 비공개 전송가능


#AWS Trusted Advisor 
트러스트 어드바이저는 AWS콘솔계정을 분석하고, 5가지 범주(카테고리)에 대한 권고를 제공
1.비용 최적화
2.성능
3.보안
4.고장내성(내결함성)
5.서비스한도(할당량)
~~~~~또한
>Basic 과 Developer support plan에 제공되는 7가지 핵심 검사(core check) 암기(보안탭)
/S3 bucket 권한을 검사해서 퍼블릭인지 확인/
/보안그룹을 검사해서 SSH같이 제한되지 않은 무제한 액세스가 있는지 확인(Unrestricted ports)
/IAM 사용을 검사해서 계정에 적어도 IAM사용자가 한명이상있는지 확인
/MFA를 검사해서 Root계정에서 멀티팩터 인증을 활성화 했는지 확인
/EBS 를 검사해서 EBS public snapshot이 있는지 확인
/RDS 를 검사해서 RDS public snapshot이 있는지 확인
/마지막으로 AWS 서비스의 한도 탭을 확인 (서비스 할당량:리전별로 할당량이 있다)
~~~
>Business 와 Enterprise support plan 에 제공되는 5가지 FULL CHECKS
/앞에 나온 5 카테고리의 풀체크를 제공(비용 최적화, 보안, 내결함성, 성능, 서비스 할당량)
/한도에 도달했을 때, CloudWatch 경보(알람)을 설정할 수 있다.
/AWS Support API 를 이용해서 프로그램적으로 액세스가 가능하다. (베이직,개발자는 불가)

