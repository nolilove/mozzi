
3주차_금요일 메모
복기 및 오늘할것_
설정단계
	nmcli con mod ens160 ipv4.~~~
	ipv4.address ip_address/net_bit수
	ipv4.gateway
	ipv4.dns
	ipv4.method [auto or mannual]
마무리단계
 nmcli con up ens160
 etc/NetworkManager/system-connections/ens160.nmconnection
원격접속
 telnet(X) 권장x
 ssh 
원격접속시 암호생략
 ssh-keygen
 ssh-copy-id

  :%s/kbs/mbc/g
  :%s/kbs/sbs/g

 cp -rv /usr/share/doc/httpd-core/httpd-vhosts.conf ./ 

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
어제만든 user1,user2를 삭제한다 userdel -r user1 / userdel -r user2
확인용	tail -5 /etc/passwd

[root@server-1 ~]# systemctl status sshd   로 sshd상태를 확인
[root@server-1 ~]# netstat -a -n -p -t 

Active Internet connections (servers and established)
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    
tcp        0      0 127.0.0.1:631           0.0.0.0:*               LISTEN      1113/cupsd          
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1115/sshd: /usr/sbi 
tcp6       0      0 ::1:631                 :::*                    LISTEN      1113/cupsd          
tcp6       0      0 :::23                   :::*                    LISTEN      1/systemd           
tcp6       0      0 :::22                   :::*                    LISTEN      1115/sshd: /usr/sbi 
tcp6       0      0 :::9090                 :::*                    LISTEN      1/systemd           

= [root@server-1 ~]# netstat -anpt | grep sshd  으로 tcp부분을 가져온다
[root@server-1 ~]# netstat -anpt | grep sshd
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      1115/sshd: /usr/sbi 
tcp6       0      0 :::22                   :::*                    LISTEN      1115/sshd: /usr/sbi 

systemctl stop sshd  를 입력하면 netstat 명령시 아무것도 뜨지않음.
systemctl start sshd 를 다시 입력하고 netstat명령시 PID만 변경되고 다시 출력된다.
[root@server-1 ~]# netstat -anpt | grep sshd
tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      3241/sshd: /usr/sbi 
tcp6       0      0 :::22                   :::*                    LISTEN      3241/sshd: /usr/sbi 

[root@server-1 ~]# systemctl status telnet.socket 시 액티브상태에 있는것을 알수있음(어제)
Loaded: loaded (/usr/lib/systemd/system/telnet.socket; enabled; preset: disabled)
기본설정 프리셋은 disabled라서 사용불가인데 어제 enabled로 변경했다.

[root@server-1 ~]# firewall-cmd   --list-services 
cockpit dhcpv6-client ssh                                  방화벽 목록에 추가를해 본다.

firewall-cmd   --add
[root@server-1 ~]# firewall-cmd   --add-service=telnet --permanent     
제거는 --remove이다
firewall-cmd --reload
firewall-cmd --list
firewall-cmd --remove
firewall-cmd --permanent --add  등 옵션이 있다

[root@server-1 ~]# firewall-cmd --permanent   --add-port=23
Error: INVALID_PORT: bad port (most likely missing protocol), correct syntax is portid[-portid]/protocol
					이경우 올바른 신택스를 넣어야한다는 알림이뜸.
[root@server-1 ~]# firewall-cmd --permanent   --add-port=23/tcp     	로 넣어준다.
[root@server-1 ~]# firewall-cmd --reload   리로드
[root@server-1 ~]# firewall-cmd --list-ports   
	23/tcp								확인이 가능하다.
동일한 방법으로 22/tcp도 추가해준다.

# 리스트에서 확인해보기.		
[root@server-1 ~]# firewall-cmd --list-all
public (active)
  target: default
  icmp-block-inversion: no
  interfaces: ens160
  sources: 
  services: cockpit dhcpv6-client ssh telnet
  ports: 23/tcp 22/tcp
  protocols: 
  forward: yes
  masquerade: no
  forward-ports: 
  source-ports: 
  icmp-blocks: 
  rich rules:
>>>Port 번호 22: 보안텔넷(SSH)   // 23: 텔넷 
===========================================================

#Name Resolution     Name     -->  IP Address   **중요**
연관된 것으로는 DNSㅡ 즉 Domain Name System이 있다.(Name Resolution Service)
ls -l -a 를 하면 숨김파일도 전부 드러나게되는데, 최초 접속을 가정하고 ssh를 보자.
[root@server-1 ~]# ssh root@172.25.3.12 		server-2의 아이피를 적었다.
그렇다면 
The authenticity of host '172.25.3.12 (172.25.3.12)' can't be established.
ED25519 key fingerprint is SHA256:g63GJLBUCBqSGtPbrqxuYeTozd3rkVEZ5dVEzoc+ods.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? 가 나오는데, yes 입력
pw를 입력하고 접속하면 
[root@server-2 ~]# 서버2에 접속하게된다.

[root@server-2 ~]# echo $HOSTNAME 
server-2.example.com
[root@server-2 ~]# ls -l .ssh
ls: cannot access '.ssh': No such file or directory
exit로 빠져나온다.
[root@server-1 ~]# ls -l ~/.ssh		를 입력해본다.
합계 8
-rw-------. 1 root root 831  9월  8 10:10 known_hosts
-rw-r--r--. 1 root root  93  9월  8 10:10 known_hosts.old
새로 파일들이 생긴 것을 알 수 있는데,
[root@server-1 ~]# cat   .ssh/known_hosts     하면 암호화된 내용이 나온다.(첫 접속때만)

server2에 접속해본다
[root@server-2 ~]# ssh  root@172.25.3.11			서버1 아이피 접속을 시도
The authenticity of host '172.25.3.11 (172.25.3.11)' can't be established.
ED25519 key fingerprint is SHA256:LDI9dIQUL59WBMPjnHwTyILi/pYKAsOSZUEwlztZpoQ.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes


[root@server-1 ~]# ll .ssh
합계 8
-rw-------. 1 root root 831  9월  8 10:10 known_hosts
-rw-r--r--. 1 root root  93  9월  8 10:10 known_hosts.old
[root@server-1 ~]# cat .ssh/known_hosts	 하면 똑같이 암호화된 내용이 나온다.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~SSH로 비밀번호 없이 원격접속하기


[root@server-1 ~]# ssh-keygen 			를 입력하면
Generating public/private rsa key pair.
Enter file in which to save the key (/root/.ssh/id_rsa): 
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /root/.ssh/id_rsa
Your public key has been saved in /root/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:g8PSM3RyXICPA0kcTlIK8rRqI/9qagfOzlH0H5v0nmI root@server-1.example.com
The key's randomart image is:
+---[RSA 3072]----+
|o o+=o ....      |
|.+ *+ .. .       |
|  +...oo+        |
| .. .+o=.        |
|oo ...B+S        |
|ooo  .o+=.       |
|o.o    + .       |
|.+oo   E. .      |
|+=o.. . .o       |
+----[SHA256]-----+

이로써 프라이빗한 키 하나가 생성되었다.
[root@server-1 ~]# ll .ssh		확인을 해보면,
합계 16
-rw-------. 1 root root 2610  9월  8 10:28 id_rsa
-rw-r--r--. 1 root root  579  9월  8 10:28 id_rsa.pub
-rw-------. 1 root root  831  9월  8 10:10 known_hosts
-rw-r--r--. 1 root root   93  9월  8 10:10 known_hosts.old
두개파일이 새로 생성된것이 확인됨.

[root@server-1 ~]# ssh-copy-id  root@172.25.3.12     이 키의 복사 이후 로그인시도를하면,
비밀번호를 입력하라고 하니 입력해준다.
이때 Number of key(s) added: 1		라고 뜨며,
Now try logging into the machine, with:   "ssh 'root@172.25.3.12'"
and check to make sure that only the key(s) you wanted were added.
이 뒤에 서버접속을 시도하면 비밀번호 없이 접속이 된다.

[root@server-1 ~]# ssh root@172.25.3.12 
Activate the web console with: systemctl enable --now cockpit.socket

Last login: Fri Sep  8 10:14:38 2023 from 172.25.3.11
~~~
서버2에서도 ssh-keygen을 눌러 랜덤이미지키를 생성한다. ls -l .ssh로 확인하면
-rw-------. 1 root root  579 Sep  8 10:30 authorized_keys
-rw-------. 1 root root 2610 Sep  8 10:32 id_rsa
-rw-r--r--. 1 root root  579 Sep  8 10:32 id_rsa.pub
-rw-------. 1 root root  831 Sep  8 10:17 known_hosts
-rw-r--r--. 1 root root   93 Sep  8 10:17 known_hosts.old
기존파일에 추가된것을 볼 수 있다.

[root@server-2 ~]# ssh root@172.25.3.11   서버1에 접속을 시도하면 비밀번호 입력창이 뜸.
[root@server-2 ~]# ssh-copy-id root@172.25.3.11 	키복사를해주면
로그인했을때 비밀번호를 다시 묻지 않게 된다.
>> ssh-keygen //  ssh-copy-id  
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[root@server-1 ~]# su - student
[student@server-1 ~]$ pwd
/home/student
[student@server-1 ~]$ ls -l .ssh
ls: cannot access '.ssh': 그런 파일이나 디렉터리가 없습니다

이러면 student에 원격접속한적이 한번도 없다는 뜻이된다.
student 방 안에 ssh-keygen로 키를 생성한다.
Generating public/private rsa key pair.
Enter file in which to save the key (/home/student/.ssh/id_rsa): 
Created directory '/home/student/.ssh'.
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
Your identification has been saved in /home/student/.ssh/id_rsa
Your public key has been saved in /home/student/.ssh/id_rsa.pub
The key fingerprint is:
SHA256:azGtw52IDu4OCJEUppO2Q+VZb0JWoRgZ8G8L5NLqM8U student@server-1.example.com
The key's randomart image is:
+---[RSA 3072]----+
| =o+o+.o.        |
|+o+.B o          |
|*o * o o         |
|oo= . o  .       |
|.+.+ o  S .      |
|..+Eo .o B .     |
|..o ... B o      |
|.o o o . .       |
| .oo+ .          |
+----[SHA256]-----+
[student@server-1 ~]$ ssh-copy-id student@172.25.3.12 	키를 카피하려면
student의 패스워드를 입력하라고 나온다.
[student@server-1 ~]$ ssh student@172.25.3.12           	서버2에 로그인하면 잘됨.

서버2로 넘어와서,
[root@server-2 ~]# su - student 
[student@server-2 ~]$ ssh-keygen 
이미지키가 생성되고,
[student@server-2 ~]$ ssh-copy-id student@172.25.3.11
[student@server-2 ~]$ ssh student@172.25.3.11  로  로그인시도하면 잘 된다.
*tip) alias "cls"="clear" 시 cls가 clear명령어가된다.
===========================================================
-server-3에 들어가본다.
useradd  -G  wheel	 sol_admin		그룹 wheel에 sol admin유저를 추가 pw : 1 
passwd sol_admin 
-server-2에서도
useradd  -G  wheel	 sol_admin		그룹 wheel에 sol admin유저를 추가 pw : 1 
passwd sol_admin 
-Xshell 프로그램에서 server3 연동
useradd  -G  wheel	 sol_admin		그룹 wheel에 sol admin유저를 추가 pw : 1 
passwd sol_admin 
~~
서버1에서 로그아웃해본다.
sol_admin으로 로그인해서 
[sol_admin@server-1 ~]$ ssh-keygen
[sol_admin@server-1 ~]$ ssh-copy-id sol_admin@172.25.3.12  내인증서 내가 복사한다
[sol_admin@server-1 ~]$ ssh-copy-id sol_admin@172.25.3.13 여기에도 복사한다.
이러면 로그인해서 ssh sol_admin@172.25.3.1x으로 서버운영을 할 수 있게된다.(기반)
===========================================================
SSH 시나리오
시스템관리를 최고의 권한을 가지고 원격관리하고싶을때.
> root 권한을 얻기
[sol_admin@server-1 ~]$ su - root
암호:
[root@server-1 ~]#      이곳에서 처리 후 exit로 나오면된다.

권한 거부당했을 때.
[sol_admin@server-1 ~]$ cat -n /etc/sudoers
cat: /etc/sudoers: 허가 거부
[sol_admin@server-1 ~]$ sudo useradd test1         sudo 명령어로 test1 유저를만든다.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[root@server-1 ~]# ll /etc/hosts
-rw-r--r--. 1 root root 158  6월 23  2020 /etc/hosts
[root@server-1 ~]# cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6

[root@server-1 ~]# vim /etc/hosts  입력해서
172.25.3.11 www.myhome23.co.kr
172.25.3.12 www.naver2023.co.kr
172.25.3.13 www.solkangnam.com 		를추가

[root@server-1 ~]# ping -c 2 www.myhome23.co.kr
[root@server-1 ~]# ping -c 2 www.naver2023.co.kr
[root@server-1 ~]# ping -c 2 www.solkangnam.com
핑이 되는 이유는, [root@server-1 ~]# cat /etc/hosts 에서 확인 가능한데
위의 vi 편집기에서 추가를 했기 때문이다.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#scp 명령어를 이용해 원격서버로 파일을 여러 컴퓨터에 배포
[root@server-1 ~]# scp   /etc/hosts  root@172.25.3.12:/etc/hosts     폴더에 덮어버린다.
[root@server-1 ~]# scp   /etc/hosts  root@172.25.3.13:/etc/hosts
The authenticity of host '172.25.3.13 (172.25.3.13)' can't be established.
ED25519 key fingerprint is SHA256:Y4/JVbqJ1ZFj5hLbUxrlwedrrtqPTXRXO4vo6GGraxY.
This key is not known by any other names
Are you sure you want to continue connecting (yes/no/[fingerprint])?  yes   로그인처음일때
[root@server-1 ~]# ssh-copy-id root@172.25.3.13   후 패스워드 입력
이 방식으로 server2, server3에서도 cat  /etc/hosts로 확인가능하다.

#vim 사용법과 관련있음/권한
[root@server-1 test]# vim     abc.txt
여기서 조작을 해본다. ll로 확인 시,
-rw-r--r--. 1 root root 30  9월  8 12:00 abc.txt  인데 여기서
[root@server-1 test]# chmod -v 400 abc.txt 
mode of 'abc.txt' changed from 0644 (rw-r--r--) to 0400 (r--------)
read only + 접근제한을 걸어버리게 되면
-r--------. 1 root root 30  9월  8 12:00 abc.txt 이 되고,  
[root@server-1 test]# vim     abc.txt 에서 수정할때 read only라서 저장하기위해서는
:wq가 아니라 :wq!를 입력해야한다.

불편함이 느껴져서 다시 권한을 바꾸면
[root@server-1 test]# chmod -v 644 abc.txt 
mode of 'abc.txt' changed from 0400 (r--------) to 0644 (rw-r--r--)
[root@server-1 test]# su student
[student@server-1 test]$ ll
-rw-r--r--. 1 root root 39  9월  8 12:03 abc.txt       제3자로 로그인해서 파일에 접근한다.
직접 이 파일을 만들지 않은 유저 student는 :wq!로도 수정이 불가능하다.  :q!로 나오기.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[root@server-1 test]# ll /etc/sudoers
-r--r-----. 1 root root 4383  8월 31 17:40 /etc/sudoers		권한이 readonly인 것 확인

[root@server-1 test]# vim   /etc/hosts
vim /etc/hosts에 아까 추가했던 도메인을 변경
172.25.3.11 server-1.example.com  server-1 svr-1  www.web2023.com
172.25.3.12 server-2.example.com  server-2 svr-2  ftp.web2023.com
172.25.3.13 server-3.example.com  server-3 svr-3  mail.web2023.com
이걸 서버 2, 3에 덮어버린다
[root@server-1 test]# scp /etc/hosts root@172.25.3.12:/etc/			복사
hosts                                                                      100%  357   167.6KB/s   00:00    
서버3에 	
[root@server-3 ~]# scp root@172.25.3.11:/etc/hosts /etc/		로 복사.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# 아이피대신 호스트네임으로 접속하게 될때, 왜 핑거프린트알림이 뜨는가?
[root@server-1 test]# ssh   root@172.25.3.12        이 아니라
[root@server-1 test]# ssh   root@server-2.example.com 로 접속시도하면 처음접속하듯
The authenticity of host 'server-2.example.com (172.25.3.12)' can't be established.
ED25519 key fingerprint is SHA256:g63GJLBUCBqSGtPbrqxuYeTozd3rkVEZ5dVEzoc+ods.
This host key is known by the following other names/addresses:
    ~/.ssh/known_hosts:1: 172.25.3.12
Are you sure you want to continue connecting (yes/no/[fingerprint])? yes 
Warning: Permanently added 'server-2.example.com' (ED25519) to the list of known hosts.
Activate the web console with: systemctl enable --now cockpit.socket

Last login: Fri Sep  8 12:26:12 2023 from 172.25.3.11		가 출력된다.
그 이유는아이피 172.25.3.12를 외우는 것보다 
도메인네임(사람이름) server-2.example.com 외우는게 쉬운 것과 비슷한 이치다. 
[root@server-1 ~]# cat .ssh/known_hosts     로 들어가면 
 
아이피 내역만 나오다가 갑자기 server-2.example.com 이란 도메인이 나오므로 핑거프린트 알림이 새로 출력된것. = '나는 이 이름으로는 처음 접속하는구나' 라고 생각하자. 물론 두번째부터는 암호 입력창이나 알림을 띄우지 않음.
===========================================================
홈페이지 구축 (웹 서비스)

1. 기초설정
[root@server-1 ~]# yum list available http* 를 입력해서 사용가능한 꾸러미에서 
httpd.x86_64                                      2.4.53-11.el9_2.5                      appstream
를 확인.
[root@server-1 ~]# yum install httpd -y 			를 해주면 설치된다.
~~
[root@server-1 ~]# grep apache /etc/passwd
apache:x:48:48:Apache:/usr/share/httpd:/sbin/nologin
[root@server-1 ~]# grep apache /etc/group
apache:x:48:					에서 확인이 가능하다.
 
~~
[root@server-1 ~]# systemctl status httpd 입력시
○ httpd.service - The Apache HTTP Server
     Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; preset: disabled)
     Active: inactive (dead)
       Docs: man:httpd.service(8)
기본 프리셋이 죽어있다고 뜬다.
[root@server-1 ~]# systemctl enable --now httpd   	부팅시부터 자동시작하게 설정하면
[root@server-1 ~]# ll /var/www						
drwxr-xr-x. 2 root root 6  5월 17 05:21 cgi-bin	
drwxr-xr-x. 2 root root 6  5월 17 05:21 html			확인된다.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2. 포트 추가 ,  서비스 추가
server- 2에서도 
[root@server-2 ~]# yum install httpd -y
[root@server-2 ~]# systemctl enable --now httpd		로  httpd를 설치한다.

[root@server-1 ~]# firewall-cmd --permanent --add-service=http  
[root@server-1 ~]# firewall-cmd --permanent --add-service=https   서비스 추가.
=[root@server-1 ~]# firewall-cmd --permanent --add-service={http,https}도 가능하다.
[root@server-1 ~]# firewall-cmd --permanent --add-port=80/tcp
[root@server-1 ~]# firewall-cmd --permanent --add-port=443/tcp    포트 추가.
=[root@server-1 ~]# firewall-cmd --permanent --add-port={80/tcp,443/tcp}
[root@server-1 ~]# firewall-cmd --reload 로 리프레시 후 리스트 확인하면
  services: cockpit dhcpv6-client http https ssh telnet
  ports: 23/tcp 22/tcp 80/tcp 443/tcp				가 출력된다.
[root@server-1 ~]# netstat -anpt  | grep 80    를 입력     (**all number protocol type)
tcp6       0      0 :::80                   :::*                    LISTEN      14336/httpd 

파이어폭스 주소검색창에서 http://localhost/ 를 입력해본다. svr-1
svr-2에서도 주소검색창에서 http://172.25.3.11/ 를 입력해본다. 
		다시 	     http://www.web2023.com/ 를 입력.
 셋다 테스트페이지가 나온다.
~~
3. 웹 컨텐츠 생성
서버1에서 cd 명령으로 html파일까지 온다.( cd /var/www/html)   pwd로 확인.
[root@server-1 html]# vim index.html 			로 편집기를 연다.
~~
 <HTML>
        <h1> Hello Linux Home </h1>
 </HTML> 						으로 홈페이지를 제작한다.
~~
[root@server-1 html]# systemctl restart httpd 		로 리프레시
서버2에서 http://www.web2023.com/ 로 들어가면
 아까의 화면이 도출됨.
========================================================
[root@server-1 html]# cd   /etc/httpd 로 이동.
[root@server-1 httpd]# cd conf   
[root@server-1 conf]#  ll
-rw-r--r--. 1 root root 12005  5월 17 05:18 httpd.conf
-rw-r--r--. 1 root root 13430  5월 17 05:20 magic		httpd구성까지 온다.
 vi편집기를 열고 (vim httpd.conf) #각주 안붙은 34라인을 확인
  34 ServerRoot "/etc/httpd"
~
서버2에서 폴더를 만들어본다
 [root@server-2 test]# mkdir -pv "a b c"
 [root@server-2 test]# mkdir -pv 'a b c'
 [root@server-2 test]# mkdir -pv a_b_c
[root@server-2 test]# mkdir -pv a\ b\ c/  의 차이.
결국 ll로 확인하면 
drwxr-xr-x.  2 root root   6 Sep  8 14:39 'a b c'
drwxr-xr-x.  2 root root   6 Sep  8 14:40  a_b_c     만 남는다.
~
 다시 위로넘어와 47라인을 확인
   47 Listen 80		위에 #에는 Listen 12.34.56.78:80, 즉 dns마지막에 :80만 붙이면된다.
 61라인을 확인
   61 Include conf.modules.d/*.conf	 # LoadModule foo_module modules/mod_foo.so
확장자를 .conf로 바꾼다면 서버에서 인지하도록 끌어들여 모듈화에 한다는 의미다.
 71 User apache
 72 Group apache

107 <Directory />
108     AllowOverride none
109     Require all denied
110 </Directory>

124 DocumentRoot "/var/www/html"

129 <Directory "/var/www">
130     AllowOverride None
131     # Allow open access:
132     Require all granted
133 </Directory>

168 <IfModule dir_module>
169     DirectoryIndex index.html
170 </IfModule>

358 IncludeOptional conf.d/*.conf     >> conf.d/*.con 
===========================================================
# 버추얼 호스트 (가상 호스트 서버)
실습파일 11 참조 -httpd 구축

<VirtualHost>
[root@server-1 ~]# cd /var/www
[root@server-1 www]# ls -lZd   /var/www 
drwxr-xr-x. 4 root root system_u:object_r:httpd_sys_content_t:s0 33  9월  8 12:45 /var/www
[root@server-1 www]# ls -lZd  /test				일반디렉토리와 차이가있다.
drwxrwxrwt. 2 root root unconfined_u:object_r:default_t:s0 41  9월  8 12:07 /test

[root@server-1 www]# mkdir -pv kbs mbc sbs			각 세 폴더를 만든다.
[root@server-1 www]# tree /var/www
/var/www
├── cgi-bin
├── html
│   └── index.html
├── kbs
├── mbc
└── sbs						index.html를 붙여서 각폴더에 붙임.
[root@server-1 www]# cp -rv html/index.html    kbs/
'html/index.html' -> 'kbs/index.html'
[root@server-1 www]# cp -rv html/index.html    mbc/
'html/index.html' -> 'mbc/index.html'
[root@server-1 www]# cp -rv html/index.html    sbs/
'html/index.html' -> 'sbs/index.html'			주의: 한번에 하려고하면안된다.

[root@server-1 www]# tree /var/www
/var/www
├── cgi-bin
├── html
│   └── index.html
├── kbs
│   └── index.html
├── mbc
│   └── index.html
└── sbs
    └── index.html
각 폴더의 편집기로 들어간다  / i 가 아니라 대문자 R로 들어가면 --바꾸기--가 됨(들여쓰기)
수정하고 컨텐츠제작을 완료한다. 
[root@server-1 www]# cd   /etc/httpd
[root@server-1 httpd]# ll
 
여기에서 conf.d  나 conf.modules.d에 들어간다
#환경설정 (/usr/share/doc 암기)
[root@server-1 conf.d]# ll /usr/share/doc/httpd-core/httpd-vhosts.conf
 
위 파일을 복사해야된다.
[root@server-1 conf.d]# cp  -rv /usr/share/doc/httpd-core/httpd-vhosts.conf ./  
-rw-r--r--. 1 root root 1477  9월  8 15:40 httpd-vhosts.conf 	가 ll로 확인된다.
vi편집기로 이 파일을 연다.			귀찮은주석 삭제(대문자V-방향키-del)
~
 
이 예제를 참고해서 실습하도록 한다.
 
  1 <VirtualHost *:80>
  2     ServerAdmin webmaster@kbs2023.co.kr
  3     DocumentRoot "/var/www/kbs"
  4     DirectoryIndex index.html
  5     ServerName www.kbs2023.co.kr
  6     ServerAlias kbs2023.co.kr
  7     ErrorLog "/var/log/httpd/kbs2023.co.kr-error_log"
  8     CustomLog "/var/log/httpd/kbs2023.co.kr-access_log" common
  9 </VirtualHost>
여기에 추가로 선택사항 directory 설정을 추가한다.
 
 11 <Directory "/var/www/kbs">
 12   AllowOverride None
 13   Require all granted
 14 </Directory>
~
[root@server-1 conf.d]# mv -v httpd-vhosts.conf  kbs-vhosts.conf 
이제 ll로 확인해본다.
-rw-r--r--. 1 root root  403  9월  8 16:00 kbs-vhosts.conf
이제 이를 복사해본다.
[root@server-1 conf.d]# cp -v kbs-vhosts.conf mbc-vhost.conf
'kbs-vhosts.conf' -> 'mbc-vhost.conf'
[root@server-1 conf.d]# cp -v kbs-vhosts.conf sbs-vhost.conf
'kbs-vhosts.conf' -> 'sbs-vhost.conf'

이제 복사한 내용을 다시 바꾼다.
vim m tab --> kbs를 mbc로만 바꾸면 되는데, 이를 치환하면 된다.
vim s tab    
~
:%s/kbs/mbc/g   와   :%s/kbs/sbs/g 를 이용하면 된다. (치환)
 
 
 
만약 깜빡이는 부분(search)이 거슬린다면, :NOHL 를 입력하자.
:nohl 
~
[root@server-1 conf.d]# systemctl restart httpd		재시작을 한뒤,
[root@server-1 conf.d]# systemctl status httpd		로 상태 확인을 한다.
[root@server-1 conf.d]# vim /etc/hosts    여기서 kbs , mbc , sbs 추가를하고

[root@server-1 conf.d]# scp /etc/hosts    root@172.25.3.12:/etc/
hosts                                                           100%  495   282.3KB/s   00:00    
[root@server-1 conf.d]# scp /etc/hosts    root@172.25.3.13:/etc/
hosts                                                           100%  495   761.2KB/s   00:00
tip)*scp= secure copy
서버2로 가서 확인
[root@server-2 test]# cat /etc/hosts
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1         localhost localhost.localdomain localhost6 localhost6.localdomain6
172.25.3.11 server-1.example.com  server-1 svr-1  www.web2023.com
172.25.3.12 server-2.example.com  server-2 svr-2  ftp.web2023.com
172.25.3.13 server-3.example.com  server-3 svr-3  mail.web2023.com

172.25.3.11 www.kbs2023.co.kr  kbs2023.co.kr  
172.25.3.11 www.mbc2023.co.kr  mbc2023.co.kr
172.25.3.11 www.sbs2023.co.kr  sbs2023.co.kr
파이어폭스에서 확인
 
이런 방식으로 잘 나오면 성공이다.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Wireshark를 켠다. 서버1
파이어폭스를 켜서 검색. 서버2
서버1에서 캡쳐를 끈다.
 
필터검색에서 http를 검색. source .12와 destination .11같은걸 검색
~~~~~~ 확인하기.
[root@server-1 conf.d]# cd /var/log/httpd/
[root@server-1 httpd]# ll
합계 20
-rw-r--r--. 1 root root 2357  9월  8 14:31 access_log
-rw-r--r--. 1 root root 3100  9월  8 16:28 error_log
-rw-r--r--. 1 root root  150  9월  8 16:34 kbs2023.co.kr-access_log
-rw-r--r--. 1 root root    0  9월  8 16:28 kbs2023.co.kr-error_log
-rw-r--r--. 1 root root  369  9월  8 16:36 mbc2023.co.kr-access_log
-rw-r--r--. 1 root root    0  9월  8 16:28 mbc2023.co.kr-error_log
-rw-r--r--. 1 root root  219  9월  8 16:36 sbs2023.co.kr-access_log
-rw-r--r--. 1 root root    0  9월  8 16:28 sbs2023.co.kr-error_log
[root@server-1 httpd]# tail kbs2023.co.kr-access_log 
172.25.3.12 - - [08/Sep/2023:16:34:49 +0900] "GET / HTTP/1.1" 200 43
172.25.3.12 - - [08/Sep/2023:16:34:49 +0900] "GET /favicon.ico HTTP/1.1" 404 196
==========================================================
Virtual web site 구축실습 예제 풀이
단계-1 Virtual Web site 구축 시나리오
Real Machine : 1 대
IP Address : 172.25.3.11 /24
Listen Port : 80
Web Site 정보
URL ,FQDN
www.kt2023.com
www.lg2023.com
www.sk2023.com
DirectoryIndex파일
mkdir -pv /var/www/mobile/{kt,lg,sk}
kt.html
lg.html
sk.html
단계-2 Virtual Web site 디렉토리만들기
~]#mkdir -pv /var/www/mobile/{kt,lg,sk}
단계-3 VirtualWebsite 콘텐츠 복사 및 수정(각각 세 번 반복한다.)
~]# cp -rv /var/www/kbs/index.html /var/www/mobile/kt/kt.html
단계-4 /etc/httpd/conf.d/에 새로운 kt.conf파일을 만들어 다음을 추가한다
cp -rv /usr/share/doc/httpd-core/httpd-vhosts.conf ./
mv -v httpd-vhosts.conf kt.conf
<VirtualHost *:80>
ServerAdmin webmaster@www.kt2023.com
DocumentRoot “/var/www/mobile/kt”
DirectoryIndex kt.html
ServerName www.kt2023.com
ServerAlias kt2023.com
</VirtualHost>
<Directory "/var/www/mobile/kt">
AllowOverride None
Require all granted
</Directory>
vim에서 치환하는 방법
예시 :%s/찾을_문자열/바꿀_문자열/g
단계-5 httpd.service 를 다시 시작한다.
~]# systemctl restart httpd.service
단계-6 Linux-1에서 작업
“/etc/hosts”파일에 다음 내용을 입력(추가)한다.
~]# vim /etc/hosts
172.25.3.11 www.kt2023.com kt2023.com
172.25.3.11 www.lg2023.com lg2023.com
172.25.3.11 www.sk2023.com sk2023.com
:wq
~]# scp /etc/hosts root@172.25.3.12:/etc/
~]# scp /etc/hosts root@172.25.3.13:/etc/
단계-7 Server-2에서 test
http://www.kt2023.com
http://kt2023.com


>>오류났던부분 vim kt.html 에서 kbs를 kt로 바꾸지 않았음
[root@server-1 ~]# cd /var/www/mobile/kt   , lg , sk 로 이동 _풀이1
[root@server-1 kt]# vim kt.html   확인하기.
4단계에서 cd /etc/httpd/conf.d/로 이동할것.	_풀이2

<VirtualHost *:80>
    ServerAdmin webmaster@www.kt2023.com
    DocumentRoot "/var/www/mobile/kt"
    DirectoryIndex kt.html
    ServerName www.kt2023.com
    ServerAlias kt2023.com
    ErrorLog "/var/log/httpd/kt.com-error_log"
    CustomLog "/var/log/httpd/kt.com-access_log" common
</VirtualHost>

<Directory "/var/www/mobile/kt">
AllowOverride None
 Require all granted
</Directory>                      _풀이3
 
 
오류: kt는 됐는데, lg와 sk는 아직 kbs로 도출


 
 
>>가상화는 어려우니 연습을 많이 하자는 생각이 든다.


