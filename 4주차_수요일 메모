

4주차_수요일 메모 
오늘의 중요한것 
systemctl enable --now rsyncd
firewall-cmd --permanent --add-service=rsyncd
firewall-cmd --reload		의 중요성 복기

스크립트를 짤 때 , #!/bin/bash 맨위에 추가하는것이 필수!
chmod a+x 대상  >모든 사용자(a)의 실행(x)권한 추가(+)
chmod a-wx 대상> 모든 사용자(a)의 쓰기(w), 실행(x) 권한 제거(-)
chmod u+rw,g-r 대상 > 소유자(u)는 rw 추가, 그룹사용자(g)는 r 제거
chmod ug=r 대상 > 소유자(u), 그룹사용자(g)의 권한을 읽기(r--)로 지정(=)
/var/log/cron  로그, 변수는 /var에 있다

rsync   ,   lsync
*여러줄 주석처리 = 명령모드 블럭지정 대문자V , 콜론(:)    >>  :norm i# 를 하면됨.
			반대로 지울때는 		>> :norm 1x 를 하면됨.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
스냅샷으로 초기화한 뒤, 진행한다.

[root@server-1 source]# tree /source/
/source/
├── data
│   └── data1
│       └── data2
├── dir
├── f1
└── f2
이 상태에서의 rsync 기능을 사용하면, 
[root@server-1 source]# rsync -avh /source/ /target/
sending incremental file list
created directory /target
./
f1
f2
data/
data/data1/
data/data1/data2/
dir/

sent 299 bytes  received 107 bytes  812.00 bytes/sec
total size is 0  speedup is 0.00
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
타겟 폴더또한 생성됨을 알 수 있다. 	이 둘을 비교해보자.
[root@server-1 source]# stat f1 | tail -4
Access: 2023-09-13 09:06:07.254407179 +0900
Modify: 2023-09-13 09:14:20.193181655 +0900
Change: 2023-09-13 09:14:20.193181655 +0900
 Birth: 2023-09-13 09:06:07.254407179 +0900
[root@server-1 source]# stat /target/f1 | tail -4
Access: 2023-09-13 09:11:34.096891436 +0900
Modify: 2023-09-13 09:06:07.254407179 +0900
Change: 2023-09-13 09:11:34.096891436 +0900
 Birth: 2023-09-13 09:11:34.096891436 +0900
~~~다시 rsync를 해본다
[root@server-1 source]# rsync -avh /source/ /target/
sending incremental file list
f1

sent 260 bytes  received 39 bytes  598.00 bytes/sec
total size is 11  speedup is 0.04
[root@server-1 source]# stat f1 | tail -4
Access: 2023-09-13 09:17:24.699717330 +0900
Modify: 2023-09-13 09:14:20.193181655 +0900
Change: 2023-09-13 09:14:20.193181655 +0900
 Birth: 2023-09-13 09:06:07.254407179 +0900
[root@server-1 source]# stat /target/f1 | tail -4
Access: 2023-09-13 09:17:24.700717340 +0900
Modify: 2023-09-13 09:14:20.193181655 +0900
Change: 2023-09-13 09:17:24.700717340 +0900
 Birth: 2023-09-13 09:17:24.700717340 +0900
>>rsync로 동기화한 모습.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
1. #삭제한 뒤 동기화	Rsync
[root@server-1 source]# rm -rvf f2 로    f2를 삭제.
[root@server-1 source]# ll /target/		타겟폴더에는 남아있다.
합계 4
drwxr-xr-x. 3 root root 19  9월 13 09:05 data
drwxr-xr-x. 2 root root  6  9월 13 09:05 dir
-rw-r--r--. 1 root root 11  9월 13 09:14 f1
-rw-r--r--. 1 root root  0  9월 13 09:06 f2

[root@server-1 source]# rsync -avh --delete /source/ /target/
sending incremental file list
deleting f2
./

sent 194 bytes  received 29 bytes  446.00 bytes/sec
total size is 11  speedup is 0.05

[root@server-1 source]# ll /target/
합계 4
drwxr-xr-x. 3 root root 19  9월 13 09:05 data
drwxr-xr-x. 2 root root  6  9월 13 09:05 dir
-rw-r--r--. 1 root root 11  9월 13 09:14 f1
>> /target 에서도 f2파일이 동기화해서 삭제됨을 알 수 있다.
===========================================================

[root@server-1 source]# yum list available rsync*
사용 가능한 꾸러미
rsync-daemon.noarch                           3.2.3-19.el9                            appstream
>rsync daemon을 설치를 해본다.// 서버2와 3에도 설치

[root@server-1 source]# systemctl  status rsyncd
○ rsyncd.service - fast remote file copy program daemon
     Loaded: loaded (/usr/lib/systemd/system/rsyncd.service; disabled; preset: disabled)
     Active: inactive (dead)
>이제 활성화*enable 하고 방화벽*firewall-cmd에 추가해야 한다. 또한 리로드 해야함.
[root@server-1 source]# systemctl enable --now rsyncd
[root@server-1 source]# firewall-cmd --permanent --add-service=rsyncd
[root@server-1 source]# firewall-cmd --reload
>자동부팅을 위해서는 /etc/fstab에도 추가하면 좋다.

서버2에 target 디렉토리가 없을건데, 
[root@server-2 ~]# ll /target
ls: cannot access '/target': No such file or directory
타겟 디렉토리를 만들어내면서 동기화해본다. 이때 절대영역 / /를 추가해주면 좋다.
[root@server-1 source]# rsync -avh /source/ root@172.25.3.12:/target/
root@172.25.3.12's password: 
sending incremental file list
created directory /target
./
f1
data/
data/data1/
data/data1/data2/
dir/

sent 264 bytes  received 88 bytes  64.00 bytes/sec
total size is 11  speedup is 0.03
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>>rsync의 동기화는 서버끼리 할때 ssh 기반으로 암호화되어 넘어가므로, 보안에 있어서 훌륭하다는 것을 알 수 있다.

[root@server-1 source]# ssh-keygen ^C
[root@server-1 source]# ssh-copy-id    root@172.25.3.12 ^C
>>서버2 키가없을때 알아두는것이 필수이다. (초기화상태)
[root@server-2 ~]# ll /target
total 4
drwxr-xr-x. 3 root root 19 Sep 13 09:05 data
drwxr-xr-x. 2 root root  6 Sep 13 09:05 dir
-rw-r--r--. 1 root root 11 Sep 13 09:14 f1
서버 2에서 확인이 가능하다.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[root@server-2 ~]# ssh-keygen
[root@server-2 ~]# ssh-copy-id root@172.25.3.11		로 서버1로도 길을 뚷자.

[root@server-1 source]# ll /home_backup
ls: cannot access '/home_backup': 그런 파일이나 디렉터리가 없습니다 

[root@server-1 source]# rsync -avh root@172.25.3.12:/home/	/home_backup/	 를 입력
root@172.25.3.12's password: 				 	암호를 입력하라고 뜸
receiving incremental file list
created directory /home_backup
>> /home의 백업파일이 생성되었다.
===========================================================
2. #동기화하는 스크립트의 생성	echo $PATH
[root@server-1 ~]# echo $PATH
/root/.local/bin:/root/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin
[root@server-1 ~]# ll bin
ls: cannot access 'bin': 그런 파일이나 디렉터리가 없습니다
>> $PATH는 명령어를 치면, 알아서 해준다

[root@server-1 ~]# mkdir -pv ~/bin
mkdir: created directory '/root/bin'
[root@server-1 ~]# cd bin
[root@server-1 bin]# vim backup.sh
#!/bin/bash
  1 #!/bin/bash 
  2 rsync -avh /source/   root@172.25.3.12:/target/
~~
[root@server-1 bin]# ./backup.sh 로 들어가려고하면, 허가거부( 권한없음 )이 나온다.
[root@server-1 bin]# ll					로 권한을 본다

-rw-r--r--. 1 root root 65  9월 13 09:52 backup.sh
[root@server-1 bin]# chmod -v a+x backup.sh
mode of 'backup.sh' changed from 0644 (rw-r--r--) to 0755 (rwxr-xr-x)
>> 권한부여를 잘 하자.
[root@server-1 bin]# ./backup.sh
root@172.25.3.12's password: 			pw를 잘 입력하고나면,
sending incremental file list
~~~~~~
[root@server-1 tmp]# echo $PATH
/root/.local/bin:/root/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin
[root@server-1 tmp]# backup.sh 		/tmp (환경변수)폴더에도 백업파일을 둔다. 
~~~~~~~~~~~~~
3. #주기적으로 동기화 백업하도록 하는 방법 crontab
[root@server-1 tmp]# systemctl status crond 로
/usr/lib/systemd/system/crond.service; 위치를 알아낸다.
[root@server-1 tmp]# crontab -e
19 10 * * *  /root/bin/backup.sh  			다섯개 필드를 입력 (분 시 일 월 요)
> 10시 19분에 매일 실행함.

[root@server-1 tmp]# cd /source/
[root@server-1 source]# mkdir dir2
mkdir: created directory 'dir2'
[root@server-1 source]# touch f2 f3 f4
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
4. # 재확인 및 정리
[root@server-1 source]# cat ~/bin/backup.sh 
[root@server-1 source]# chmod -v a+x ~/bin/backup.sh
'/root/bin/backup.sh'의 모드를 0755(rwxr-xr-x)으로 유지하였습니다

*tip) 0시출발해서 6시간 주기로 하고싶다 = 0  0/6  * * *   /대상폴더/

[root@server-1 source]# tail /var/log/cron  >> 로그기록을 찾아보는방법.
===========================================================
실습파일 14 파일동기화 새로 업로드.

5. #서버 1과 서버2의 실시간 동기화 (Lsync)_rsync의 단점극복
1 ) 에러를 먼저내본다
[root@server-1 ~]# yum install lsync
마지막 메타자료 만료확인(1:13:43 이전): 2023년 09월 13일 (수) 오전 09시 24분 38초.
일치하는 인수가 없습니다: lsync
오류: 일치하는 항목을 찾을 수 없습니다: lsync

[root@server-1 ~]# ll /etc/yum.repos.d/
합계 20
-rw-r--r--. 1 root root 6586  6월 11 06:28 rocky-addons.repo
-rw-r--r--. 1 root root 1161  6월 11 06:28 rocky-devel.repo
-rw-r--r--. 1 root root 2379  6월 11 06:28 rocky-extras.repo
-rw-r--r--. 1 root root 3405  6월 11 06:28 rocky.repo
[root@server-1 ~]# yum install epel-release	-y		를 설치하면,
[root@server-1 ~]# yum install lsyncd -y			를 설치할 수 있다.

[root@server-1 ~]# systemctl enable --now lsyncd.service  	로 설치한 서비스 활성화.
[root@server-1 ~]# firewall-cmd --permanent --add-service=lsync
Error: INVALID_SERVICE: Zone 'public': 'lsync' not among existing services
>에러가 뜨는데, 그 이유는 
[root@server-1 ~]# firewall-cmd --list-services | grep ssh
cockpit dhcpv6-client http https rsyncd ssh telnet
ssh에 이미 방화벽 허용된 항목이기 때문이다.

[root@server-1 ~]# cat /etc/lsyncd.conf 
[root@server-1 ~]# cat /etc/rsyncd.conf 		로 확인좀 해주자.

2) rsync 설정
서버2로 넘어가서 
vim /etc/rsyncd.conf 를 편집
 [backup]
        path = /target
        comment = Source Backup Protocol
        uid = root
        gid = root
        use chroot = yes
        host allow = 172.25.3.11
        max connections = 4
        timeout = 900				을 넣고 저장
[root@server-2 ~]# systemctl restart rsyncd	리스타트함.
서버1로 넘어와서
[root@server-1 ~]# rsync -avh /source/ root@172.25.3.12:/target
[root@server-1 ~]# rsync -avh /source/ root@172.25.3.12:backup
서버2로 다시넘어가서
[root@server-2 ~]# vim /etc/rsyncd.conf 
 [web2]
        path = /var/www/html/
        comment = Source Backup Protocol
        uid = root
        gid = root
        use chroot = yes
        host allow = 172.25.3.11
        max connections = 4
        timeout = 900					를 고대로 추가함

서버3로 넘어가서 httpd를 설치 , 
server-3 ~]# firewall-cmd --permanent --add-service=http   방화벽추가.
tree 를 설치.
tree /var/www				를 입력하면
/var/www
 - cgi-bin
 - html 					이 있는것 확인이 가능.
방화벽 리로드를한다

서버2로와서
[root@server-2 ~]# ll /etc/rsyncd.conf 
-rw-r--r--. 1 root root 765 Sep 13 11:29 /etc/rsyncd.conf
서버3으로 복사하려고한다.
[root@server-2 ~]# scp /etc/rsyncd.conf  root@172.25.3.13:/etc/	으로 추가하기.

서버3으로 와서
cat -n /etc/rsync.conf 를 입력하면	확인이 가능.

서버1으로 와서
[root@server-1 ~]# vim /etc/lsyncd.conf 			편집기로 이동
여기서는 LUA 언어를 사용한다.
----
-- User configuration file for lsyncd.
--
-- Simple example for default rsync, but executing moves through on the target.
--
-- For more examples, see /usr/share/doc/lsyncd*/examples/
--
sync{default.rsyncssh, source="/var/www/html", host="172.25.3.12", targetdir="/var/www/html/"}			
sync{default.rsyncssh, source="/var/www/html", host="172.25.3.13", targetdir="/var/www/html/"}
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
를 저장하고 꼭 리스타트하기
[root@server-1 ~]# systemctl restart lsyncd.service 

[root@server-1 ~]# cd /var/www/html/
[root@server-1 html]# vim index.html 
<HTML>
        <h1> Soldesk  </h1>
</HTML> 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
이러면 서버1,2,3은 다 오게된다.

[root@server-1 html]# systemctl restart rsyncd 를 하고 
각각의 서버에서 ll 로 시간을 조회
>>동기화가 안되는경우
[root@server-1 html]# vim /etc/lsyncd.conf   	로 들어간다
--sync{default.rsyncssh, source="/var/www/html", host="172.25.3.12", targetdir="/var/www/html/"}
--sync{default.rsyncssh, source="/var/www/html", host="172.25.3.13", targetdir="/var/www/html/"}				로 주석처리한다.

sync{default.rsyncssh, source="/abc1", host="loaclhost", targetdir="/abc2"} 	를 입력하고 테스트하기.
~~~~~~~~~~~~~~~~~~
[root@server-1 html]# systemctl restart lsyncd
[root@server-1 html]# mkdir -pv /abc1 /abc2
mkdir: created directory '/abc1'
mkdir: created directory '/abc2'
[root@server-1 html]# touch /abc1/f1  

[root@server-1 html]# rsync -avh /source/ root@172.25.3.12:/var/www/html/  입력

[root@server-1 source]# rsync -avh /var/www/html/   root@172.25.3.12:web2 입력

[root@server-1 ~]# vim /etc/lsyncd.conf 
sync{default.rsyncssh, source="/test11/", targetdir="/test22/"}  입력
[root@server-1 ~]# systemctl restart lsyncd.service 
[root@server-1 ~]# mkdir -pv /test11 /test22
[root@server-1 ~]# touch /test11/aaaa.txt
[root@server-1 ~]# systemctl restart lsyncd.service
[root@server-1 ~]# touch /test22/bbbb.txt

=========================================================
6. # 실습파일 13 - yum Local Repository Server 구축
yum은 Yellowdog Updater Modified
yum 저장소 파일의 위치 : /etc/yum.repos.d/ 

[root@server-1 ~]# cd /etc/yum.repos.d/
[root@server-1 yum.repos.d]# ll
-rw-r--r--. 1 root root 1142  8월 28 10:30 epel-cisco-openh264.repo
-rw-r--r--. 1 root root 1552  8월 28 10:30 epel-testing.repo
-rw-r--r--. 1 root root 1453  8월 28 10:30 epel.repo
-rw-r--r--. 1 root root 6586  6월 11 06:28 rocky-addons.repo
-rw-r--r--. 1 root root 1161  6월 11 06:28 rocky-devel.repo
-rw-r--r--. 1 root root 2379  6월 11 06:28 rocky-extras.repo
-rw-r--r--. 1 root root 3405  6월 11 06:28 rocky.repo
중에서  rocky.repo 를 열어보자.
[root@server-1 yum.repos.d]# cat -n rocky.repo
    11	[baseos]
    12	name=Rocky Linux $releasever - BaseOS
    13	mirrorlist=https://mirrors.rockylinux.org/mirrorlist?arch=$basearch&repo=BaseOS-$releasever$rltype
    14	#baseurl=http://dl.rockylinux.org/$contentdir/$releasever/BaseOS/$basearch/os/
    15	gpgcheck=1
    16	enabled=1
    17	countme=1
    18	metadata_expire=6h
    19	gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-Rocky-9
저런것을 주된 내용으로 하며, 저 정보가 있어야만 프로그램 다운및 설치가 가능함.

[root@server-1 yum.repos.d]# mkdir bak
-rw-r--r--. 1 root root 1142  8월 28 10:30 epel-cisco-openh264.repo
-rw-r--r--. 1 root root 1552  8월 28 10:30 epel-testing.repo
-rw-r--r--. 1 root root 1453  8월 28 10:30 epel.repo
-rw-r--r--. 1 root root 6586  6월 11 06:28 rocky-addons.repo
-rw-r--r--. 1 root root 1161  6월 11 06:28 rocky-devel.repo
-rw-r--r--. 1 root root 2379  6월 11 06:28 rocky-extras.repo
-rw-r--r--. 1 root root 3405  6월 11 06:28 rocky.repo 를 bak에 숨겨본다.
[root@server-1 yum.repos.d]# mv -v *.repo   bak/

[root@server-1 yum.repos.d]# ll
drwxr-xr-x. 2 root root 172  9월 13 14:19 bak
>이상태에선 yum 명령어로 설치가 불가능하다.
[root@server-1 yum.repos.d]# mv -v bak/* ./ 		로 다시 복구.
======================================================
[root@server-1 yum.repos.d]# df -hT				를 검색하면
/dev/sr0            iso9660   8.9G  8.9G     0 100% /run/media/root/Rocky-9-2-x86_64-dvd
를 찾을수 있다.(시작할 때 가동됨)

[root@server-1 yum.repos.d]# ll /dev/cdrom 
lrwxrwxrwx. 1 root root 3  9월  8 09:03 /dev/cdrom -> sr0

[root@server-1 yum.repos.d]# ll /dev/sr0				cdrom과 sr0, 
brw-rw----+ 1 root cdrom 11, 0  9월  8 09:03 /dev/sr0			이 둘은 같다.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Device status를 끄면 설치가 불가. 또한 .iso(로키리눅스) 파일이 유실된다면 불가.

[root@server-1 yum.repos.d]# cd /var/www/html
[root@server-1 html]# mkdir iso
[root@server-1 html]# cd iso
[root@server-1 iso]# pwd
/var/www/html/iso
[root@server-1 iso]# cp -rv /run/media/root/Rocky-9-2-x86_64-dvd/*   ./
[root@server-1 iso]# pwd
/var/www/html/iso
[root@server-1 t]# pwd
/var/www/html/iso/AppStream/Packages/t
[root@server-1 t]# ll telnet*
-rw-r--r--. 1 root root 64632  9월 13 14:36 telnet-0.17-85.el9.x86_64.rpm
-rw-r--r--. 1 root root 38537  9월 13 14:36 telnet-server-0.17-85.el9.x86_64.rpm
>>텔넷, 이 뒤의 확장자가 .rpm으로 끝나더라. 

[root@server-1 t]# yum localinstall   telnet-0.17-85.el9.x86_64.rpm      
[root@server-1 t]# yum localinstall telnet-server-0.17-85.el9.x86_64.rpm 
*localinstall은  로컬에있는 rpm패키지를 설치할수 있는 명령어임.(원격지x)

[root@server-1 Packages]# cd ..    
[root@server-1 AppStream]# ll  에서 package를 tree명령어로 확인할수도 있다.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[root@server-1 ~]# yum install createrepo* -y
[root@server-1 ~]# cd /run/media/root/Rocky-9-2-x86_64-dvd/
[root@server-1 Rocky-9-2-x86_64-dvd]# ll
[root@server-1 Rocky-9-2-x86_64-dvd]# createrepo_c  AppStream/를하면 에러가뜬다.
Error while creating temporary repodata directory: AppStream/.repodata/: Read-only file system
[root@server-1 Rocky-9-2-x86_64-dvd]# cd /var/www/html/iso/
[root@server-1 iso]# ls
AppStream          Contributors  LICENSE                      images
BaseOS             EFI           RPM-GPG-KEY-Rocky-9          isolinux
COMMUNITY-CHARTER  EULA          RPM-GPG-KEY-Rocky-9-Testing  media.repo
[root@server-1 iso]# createrepo_c AppStream/
Directory walk started
Directory walk done - 5577 packages
Temporary output repo path: AppStream/.repodata/
Preparing sqlite DBs
Pool started (with 5 workers)
[root@server-1 iso]# createrepo_c BaseOS/
Directory walk started
Directory walk done - 1156 packages
Temporary output repo path: BaseOS/.repodata/
Preparing sqlite DBs
Pool started (with 5 workers)
Pool finished

[root@server-1 iso]# cd BaseOS/
[root@server-1 BaseOS]# ls -al
합계 12
drwxr-xr-x.  4 root root   38  9월 13 15:13 .
drwxr-xr-x.  7 root root 4096  9월 13 14:36 ..
drwxr-xr-x. 28 root root 4096  9월 13 14:36 Packages
drwxr-xr-x.  2 root root 4096  9월 13 15:13 repodata

[root@server-1 BaseOS]# cd /etc/yum.repos.d/
[root@server-1 yum.repos.d]# ll
합계 32
drwxr-xr-x. 2 root root    6  9월 13 14:21 bak
-rw-r--r--. 1 root root 1142  8월 28 10:30 epel-cisco-openh264.repo
-rw-r--r--. 1 root root 1552  8월 28 10:30 epel-testing.repo
-rw-r--r--. 1 root root 1453  8월 28 10:30 epel.repo
-rw-r--r--. 1 root root 6586  6월 11 06:28 rocky-addons.repo
-rw-r--r--. 1 root root 1161  6월 11 06:28 rocky-devel.repo
-rw-r--r--. 1 root root 2379  6월 11 06:28 rocky-extras.repo
-rw-r--r--. 1 root root 3405  6월 11 06:28 rocky.repo
이 폴더를 
[root@server-1 yum.repos.d]# mv -v *.repo  bak		로 이동.
[root@server-1 yum.repos.d]# ll
합계 0
drwxr-xr-x. 2 root root 172  9월 13 15:16 bak

7. # 새롭게 repo 파일을 생성한다.
[root@server-1 yum.repos.d]# vim my.repo

[InstallBaseOS]
name=Rocky 8 BaseOS
baseurl=http://repo.example.com/rocky8/BaseOS
enabled= 1
gpgcheck= 0

[InstallAppStream]
name=Rocky 8 Appstream
baseurl=http://repo.example.com/rocky8/AppStream
enabled= 1
gpgcheck= 0
위의 항목을 
[Install_BaseOS]
name=Rocky 9 BaseOS
baseurl=http://172.25.3.11/iso/BaseOS
enabled= 1
gpgcheck= 0

[Install_AppStream]
name=Rocky 9 Appstream
baseurl=http://172.25.3.11/iso/AppStream
enabled= 1
gpgcheck= 0
					로 변경함.
여기서 잠깐 쉘로 나오려면
:!cat bak/rocky-addons.repo (명령모드)로 나와서
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-Rocky-9  를 복사해오기 
위 항목을,

[Install_BaseOS]
name=Rocky 9 BaseOS
baseurl=http://172.25.3.11/iso/BaseOS
enabled= 1
gpgcheck= file:///etc/pki/rpm-gpg/RPM-GPG-KEY-Rocky-9  

[Install_AppStream]
name=Rocky 9 Appstream
baseurl=http://172.25.3.11/iso/AppStream
enabled= 1
gpgcheck= file:///etc/pki/rpm-gpg/RPM-GPG-KEY-Rocky-9													로 변경수정.
다시 gpgcheck= 0으로 수정
[root@server-1 yum.repos.d]# cat /etc/yum.repos.d/my.repo 로 확인할 수 있다.
[Install_BaseOS]
name=Rocky 9 BaseOS
baseurl=http://172.25.3.11/iso/BaseOS
enabled= 1
gpgcheck= 0 

[Install_AppStream]
name=Rocky 9 Appstream
baseurl=http://172.25.3.11/iso/AppStream
enabled= 1
gpgcheck= 0 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[root@server-1 yum.repos.d]# yum update
Rocky 9 BaseOS                                                  13 kB/s | 196  B     00:00    
Errors during downloading metadata for repository 'Install_BaseOS':
  - Status code: 404 for http://172.25.3.11/iso/BaseOS/repodata/repomd.xml (IP: 172.25.3.11)
오류: repo를 위한 메타자료 내려받기에 실패하였습니다 'Install_BaseOS': Cannot download repomd.xml: Cannot download repodata/repomd.xml: All mirrors were tried
>>
[root@server-1 ~]# dnf config-manager --add-repo=https://download.docker.com/linux/centos/docker-ce.repo		를 추가
[root@server-1 ~]# ll /etc/yum.repos.d/
합계 8
drwxr-xr-x. 2 root root  172  9월 13 15:16 bak
-rw-r--r--. 1 root root 1919  9월 13 16:04 docker-ce.repo
-rw-r--r--. 1 root root  208  9월 13 15:58 my.repo
-rw-r--r--. 1 root root    0  9월 13 15:59 server			이렇게 된다.
[root@server-1 ~]# cat /etc/yum.repos.d/docker-ce.repo 를보면 많은 예제가 나와있음.

#오답풀이 (redhat engineer) 레포파일 생성
[Install_BaseOS]
name=Rocky 9 BaseOS
baseurl=file:///var/www/html/iso/BaseOS
enabled= 1
gpgcheck= 0 

[Install_AppStream]
name=Rocky 9 Appstream
baseurl=file:///var/www/html/iso/AppStream
enabled= 1
gpgcheck= 0
					아까 오류났던곳에 이렇게 해보고 텔넷설치해보자.
[root@server-1 yum.repos.d]# yum install telnet*
종속성이 해결되었습니다.
처리가 필요하지 않습니다.
완료되었습니다!
물론 잘 작동된다.

[root@server-1 yum.repos.d]# yum install nfs-utils -y 도 잘 깔린다.
===========================================================
8. # 실습파일17 VSFTP서버 구축	Very Secure FTP
	
 1) 설치  
[root@server-1 yum.repos.d]# yum list available vsftp*
마지막 메타자료 만료확인(0:08:11 이전): 2023년 09월 13일 (수) 오후 04시 13분 13초.
사용 가능한 꾸러미
vsftpd.x86_64                           3.0.5-4.el9                           Install_AppStream
>위 install_appstream은 내가 구축한 reop.d로부터 유래된것.
[root@server-1 yum.repos.d]# yum install vsftpd* -y

##내가 구축한 repo  다시 복구할때 
mv my.repo   my.repo2   	로 옮겨서 격리한다.
또한
mv -v docker-ce.repo    docker-ce.repo2		로 격리
mv -v bak/*   ./    		로 원상복귀시키면 된다.
~~
[root@server-1 yum.repos.d]# systemctl enable --now vsftpd
[root@server-1 yum.repos.d]# firewall-cmd --permanent --add-service=ftp
success
[root@server-1 yum.repos.d]# firewall-cmd --reload
success
 **주의할점은 vsftp가아니라 ftp 에 해당한다.

[root@server-1 yum.repos.d]# cd /etc/vsftpd/
[root@server-1 vsftpd]# ll
합계 20
-rw-------. 1 root root  125  4월 27 03:29 ftpusers
-rw-------. 1 root root  361  4월 27 03:29 user_list
-rw-------. 1 root root 5039  4월 27 03:29 vsftpd.conf
-rwxr--r--. 1 root root  352  4월 27 03:29 vsftpd_conf_migrate.sh

[root@server-1 vsftpd]# tree /etc/vsftpd/
/etc/vsftpd/
├── ftpusers
├── user_list
├── vsftpd.conf
└── vsftpd_conf_migrate.sh

[root@server-1 vsftpd]# cd /var/ftp/
[root@server-1 ftp]# ll
합계 0
drwxr-xr-x. 2 root root 6  4월 27 03:29 pub

서버2로간다. 
[root@server-2 ~]# yum install ftp*
[root@server-2 ~]# ftp 
ftp> user student
331 Please specify the password.
Password: 
230 Login successful.

ftp> ls
227 Entering Passive Mode (172,25,3,11,59,37).
150 Here comes the directory listing.
-rw-r--r--    1 1000     1000            0 Sep 06 07:27 fff
drwxr-xr-x    2 1000     1000            6 Sep 06 07:27 kkk
drwxr-xr-x    2 1000     1000            6 Aug 30 03:45 공개
drwxr-xr-x    2 1000     1000            6 Aug 30 03:45 다운로드
drwxr-xr-x    2 1000     1000            6 Aug 30 03:45 문서
drwxr-xr-x    2 1000     1000            6 Aug 30 03:45 바탕화면
drwxr-xr-x    2 1000     1000            6 Aug 30 03:45 비디오
drwxr-xr-x    2 1000     1000            6 Aug 30 03:45 사진
drwxr-xr-x    2 1000     1000            6 Aug 30 03:45 서식
drwxr-xr-x    2 1000     1000            6 Aug 30 03:45 음악
>>vsftp는 대중적인 ftp라기보단, 우리회사의 직원이 맞니? 그래? 그럼 안에 보내줄게 정도로 확인하는것과 비슷. 
===========================================================
#FileZilla 이용_ chroot 명령어
포트 21번 대입.				실습17 2.page
 
/를 누르면 상위폴더로 이동. but root폴더로 못올라오는데, 이처럼 파일이 내집만 왔다갔다해야하는데, 다른집까지 왔다갔다하지 못하도록 규제를 거는 방법이 chroot 이다.

/etc/vsftpd/vsftpd.conf			로 들어감.
100 chroot_local_user=YES
101 chroot_list_enable=YES
102 allow_writeable_chroot=YES
103 # (default follows)
104 chroot_list_file=/etc/vsftpd/chroot_list	를 수정함.

[root@server-1 ~]# cd /etc/vsftpd/
[root@server-1 vsftpd]# ll
합계 20
-rw-------. 1 root root  125  4월 27 03:29 ftpusers
-rw-------. 1 root root  361  4월 27 03:29 user_list
-rw-------. 1 root root 5063  9월 13 17:22 vsftpd.conf
-rwxr--r--. 1 root root  352  4월 27 03:29 vsftpd_conf_migrate.sh
[root@server-1 vsftpd]# cat >> chroot_list
student

[root@server-1 vsftpd]# head -5 ftpusers 
# Users that are not allowed to login via ftp
root
bin
daemon
adm

다시 들어가서
# Users that are not allowed to login via ftp
# root
bin						root만 주석처리한다. 그러면 로그인이 됨.
[root@server-1 vsftpd]# cat chroot_list 
student
[root@server-1 vsftpd]# useradd  user13
[root@server-1 vsftpd]# passwd user13
user13 사용자의 비밀 번호 변경 중
새 암호:	1
잘못된 암호: 암호가 앞뒤 어느쪽에서 읽어도 같은 문맥임
새 암호 재입력:1
passwd: 모든 인증 토큰이 성공적으로 업데이트 되었습니다.
>>이러고 파일질라로 가서 확인하면, 내집말고는 폴더 간 이동하지 못한다

서버2로 이동
[root@server-2 ~]# ftp 172.25.3.11
Connected to 172.25.3.11 (172.25.3.11).
220 (vsFTPd 3.0.5)
Name (172.25.3.11:root): user13
331 Please specify the password.
Password:
230 Login successful.
Remote system type is UNIX.
Using binary mode to transfer files.

ftp> mkdir  data
ftp> ls
ftp> cd /
250 Directory successfully changed.
ftp> ls
227 Entering Passive Mode (172,25,3,11,37,0).
150 Here comes the directory listing.
drwxr-xr-x    2 1007     1007            6 Sep 13 08:34 data
226 Directory send OK.
>>최상위 디렉토리로의 접근이 싹다 거부됨.
 
