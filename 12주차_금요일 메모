12주차_금요일 메모(리눅스)

개요- DNS 정방향/역방향/Master서버와 Slave서버/nslookup과 host,dig /DHCP 
그리고 FTP 에 대해서 수업했다.

복습) DNS 실습전 스냅샷으로 돌아가서 진행한다.
Domain Zone
  정방향 Zone
     Domain 주소에 대한 IP 주소 정보를 포함하는 Zone
  역방향 Zone
     IP 주소에 대한 Domain 주소 정보를 포함하는 Zone

실습순서
# yum install bind
# vim /etc/named.conf
listen-on port53  { any; };  // DNS 서버 수신 대기 IPv4 주소
allow-query     { any; };       // DNS 질의를 허용하는 대상 지정 설정
[root@host2 ~]# systemctl start named.service
[root@host2 ~]# systemctl enable named.service	부팅시 활성화 영구설정
[root@host2 ~]# firewall-cmd --permanent --add-service=dns
[root@host2 ~]# firewall-cmd --reload
~~~~~~~~~~~~~
zone "study.org" IN {
        type master;
        file "study.org.zone";
        allow-update { none; };
};
[root@host2 named]# cp named.empty study.org.zone
[root@host2 named]# chown named:named study.org.zone  (chgrp named)
[root@host2 named]# vim study.org.zone
 
[root@host2 named]# systemctl restart named.service
[root@host1 ~]# nslookup
> server 192.168.100.102
Default server: 192.168.100.102
Address: 192.168.100.102#53
> study.net 
Server:		192.168.100.102
Address:	192.168.100.102#53

Non-authoritative answer:
Name:	study.net
Address: 207.210.89.200		>>잘못설정해놨음
:%s/study\.net/study\.org/g	으로 변경
Default server: 192.168.100.102
Address: 192.168.100.102#53
> study.org
Server:		192.168.100.102
Address:	192.168.100.102#53

Name:	study.org
Address: 192.168.100.102
> set type=ns
> study.org 
Server:		192.168.100.102
Address:	192.168.100.102#53

study.org	nameserver = ns.study.org.
study.org	nameserver = ns2.study.org.
> test.study.org
Server:		192.168.100.102
Address:	192.168.100.102#53

test.study.org	canonical name = host2.study.org.
Name:	host2.study.org
Address: 192.168.100.102
로 마저 확인이 가능하다.
>>레코드 상관없이 보려면 set type=any로 하면된다.
> study.org
Server:		192.168.100.102
Address:	192.168.100.102#53

study.org
	origin = ns.study.org
	mail addr = domainmaster.study.org
	serial = 0
	refresh = 86400
	retry = 3600
	expire = 604800
	minimum = 10800
study.org	nameserver = ns.study.org.
study.org	nameserver = ns2.study.org.
Name:	study.org
Address: 192.168.100.102

#역방향 존으로 만들기
zone "100.168.192.in-addr.arpa" IN {
        type master;
        file "100.168.192.in-addr.arpa.rev";
        allow-update { none; };
};
[root@host2 named]# cp named.loopback 100.168.192.in-addr.arpa.rev
[root@host2 named]# chown named:named 100.168.192.in-addr.arpa.rev
 
[root@host2 named]# systemctl restart named.service
[root@host1 ~]# nslookup 
> server 192.168.100.102
Default server: 192.168.100.102
Address: 192.168.100.102#53
> 192.168.100.102
102.100.168.192.in-addr.arpa	name = study.org.
102.100.168.192.in-addr.arpa	name = host2.study.org.
102.100.168.192.in-addr.arpa	name = ns.study.org.
> 192.168.100.101
101.100.168.192.in-addr.arpa	name = ns2.study.org.
101.100.168.192.in-addr.arpa	name = host1.study.org.
>>이렇게 역방향 레코드들을 다 보여준다. 보통 이는 아이피주소가 도메인을 가리키며 역방향레코드가 반드시 존재해야 하는 것은 아님. 따라서 1:1로 있을 필요는 없다는것. 필요한 경우 역방향레코드를 정의해서 사용 하는 것이다. 여러개를 가리키는 것도 설정불가능한 것은 아님.

# DNS의 보조서버(SLAVE) 구축하기
고가용성 (High Availability) 부하 분산 (Load Balancing) 지역성 (Geographical Redundancy)
백업 (Backup) 보안 (Security) 을 위한 것이다.
[root@host1 ~]# vim /etc/named.conf 
[root@host1 ~]# systemctl restart named.service 
[root@host1 ~]# firewall-cmd --permanent --add-service=dns
[root@host1 ~]# firewall-cmd --reload
로 Slave서버에 dns서비스구축해서 기본적인 세팅을 끝냄.
Slave 이전에 Master 서버가 구축이 되어 있어야 한다는 것을 유의하자.
[root@host2 ~]# vim /etc/named.rfc1912.zones 로 호스트2에서 편집
zone "study.org" IN {
        type master;
        file "study.org.zone";
        allow-update { none; };
        allow-transfer { 192.168.100.101; };
};
zone "100.168.192.in-addr.arpa" IN {

        type master;
        file "100.168.192.in-addr.arpa.rev";
        allow-update { none; };
        allow-transfer { 192.168.100.101; };
};
위처럼 allow-transfer 을 기존 생성해둔 master서버에 생성해준다.
[root@host2 ~]# systemctl restart named.service 로 재시작
>> master 서버에서 설정해줄 부분은 끝났다. 

#기존 도메인에 대한 SLAVE 서버 구성
[root@host1 ~]# vim /etc/named.rfc1912.zones	호스트1에서 편집
zone "study.org" IN {
        type slave;
        file "slaves/study.org.slave";
        masters { 192.168.100.102; };
};
zone "100.168.192.in-addr.arpa" IN {
        type slave;
        file "slaves/100.168.192.in-addr.arpa.slave";
        masters { 192.168.100.102; };
};
[root@host1 ~]# systemctl restart named.service
-테스트 해보기
[root@host1 ~]# nslookup
> study.org 
Server:		192.168.100.101
Address:	192.168.100.101#53

Name:	study.org
Address: 192.168.100.102
> 192.168.100.101
101.100.168.192.in-addr.arpa	name = host1.study.org.
101.100.168.192.in-addr.arpa	name = ns2.study.org.
> 192.168.100.102
102.100.168.192.in-addr.arpa	name = study.org.
102.100.168.192.in-addr.arpa	name = ns.study.org.
102.100.168.192.in-addr.arpa	name = host2.study.org.
> server
Default server: 192.168.100.101
Address: 192.168.100.101#53

[root@host1 ~]# cd /var/named/ 로 이동하면 
[root@host1 named]# ll
합계 16
drwxrwx---. 2 named named   23 11월  9 15:50 data
drwxrwx---. 2 named named   60 11월 10 11:28 dynamic
-rw-r-----. 1 root  named 2253 10월 13 04:23 named.ca
-rw-r-----. 1 root  named  152 10월 13 04:23 named.empty
-rw-r-----. 1 root  named  152 10월 13 04:23 named.localhost
-rw-r-----. 1 root  named  168 10월 13 04:23 named.loopback
drwxrwx---. 2 named named   67 11월 10 11:28 slaves
SLAVE 가 존재한다.
==============================================================
# nslookup 명령어와 아이들
-	host 명령어
host 명령어는 www.example.com has address 93.184.216.34  처럼 해당 도메인을 가지는 ip주소를 나타내준다(조회가능하다). 

host -a www.example.com 명령어는 요청이 가는것, 요청하는 메세지, 요청에 대한 응답등을 모두 나타내준다.
 
실제로 
;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 19105
;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 0
;; QUESTION SECTION:
;; ANSWER SECTION:
처럼 세미콜론 두개를 달고 섹션이 구분되어 있는 형태이며, 비교적 자세하게 나타내준다.
host -4 = ipv4 address
host -6 = ipv6 address 를 나타내주며
host -t = nslookup 의 set type 과 같은 의미로 
예를 들면 host -t A 는 A타입 레코드를 보고 싶다는 의미이다. 당연히 MX, AAAA, CNAME등 레코드가 출력 가능하다.

-	Dig 명령어
dig 명령어는 말그대로 파는(찾는) 것이며 조회를 제공한다. 
[root@host1 ~]# dig www.google.com 의 예처럼 사용한다.
 
dig 명령어는 특정 서버를 지정해서 물어볼 수도 있으며 이럴때는 @ (at)기호를 앞에 적어주면된다.
[root@host1 ~]# dig @192.168.100.2 www.example.com 처럼 물어보면 마찬가지로 캐싱된 서버를
[root@host1 ~]# dig -t MX daum.net   처럼 MX레코드 타입을 조회 했을때 응답섹션에서 도출됨.
;; ANSWER SECTION:
daum.net.		276	IN	MX	10 mx3.hanmail.net.
daum.net.		276	IN	MX	10 mx2.hanmail.net.
daum.net.		276	IN	MX	10 mx1.hanmail.net.
daum.net.		276	IN	MX	10 mx4.hanmail.net.


# DHCP 프로토콜 (Dynamic Host Configuration Protocol)
  - Host의 IP 주소 정보를 자동으로 설정하기 위한 프로토콜
  - BOOTP 프로토콜이 개선된 형태
Host 와 DHCP간 discover>offer>Request>Ack 으로 요청이 각각 이루어진다. 

호스트2 에서 yum install dhcp-server -y 
설치하고 바로 systemctl start dhcpd.service 혹은 systemctl restart dhcpd.service를 하면 오류가뜸.
DHCP failed 상태라서, 풀을 정해주고 나서야 비로소 failed 상태가 안나올것임.
[root@host2 ~]# vim /etc/dhcp/dhcpd.conf 로 들어가서 편집
 
#     //네트워크 주소          // 서브넷 마스크
#subnet NETWORK_ADDRESS netmask SUBNETMASK {
# range START_IP  END_ID;   // IP 주소 범위
# option routers  GATEWAY_ADDRESS; //Gateway Address
# option broadcast-address BROADCAST_ADDRESS; // Broadcast Address
# default-lease-time   600; // IP 주소 기본 할당 시간
# max-lease-time 7200;      // IP 주소 최대 임대 시간
# }
를 참고해서 설정하면 된다.
DHCP 실습간에는 네트워크를 차단해보고 구성해봄.
  현재 NAT에 연결되어있는 네트워크를 끊어보도록 한다.
 
 
virtual machine preferences에서 DHCP 체크버튼을 해제하고 apply 한다.
subnet 192.168.100.102 netmask 255.255.255.0 {
 range 192.168.100.100  192.168.255.255;   
 option routers  192.168.100.100; 
 option broadcast-address 192.168.255.255; 
 default-lease-time     600;  
 max-lease-time       7200; 
 }
위처럼 작성하고 저장해보자. vim /etc/dhcp/dhcpd.conf
 
위와같이 설정했다. 오타가있으면 무조건 failed 오류가 뜨니까 유의할 것.
설정이후 
nmcli device disconnect	ens160 
nmcli connection show
ifconfig 으로 잘 해제 되었는지 확인하고,
nmcli device connect 	ens160
nmcli connection show
ifconfig 으로 다시 inet IP주소가 들어오는지 확인해본다.

[root@host2 ~]# vim /usr/share/doc/dhcp-server/dhcpd.conf.example
-특정 맥주소를 알기위해 ifconfig를 찾아본다 
 
vim /etc/dhcp/dhcpd.conf 를 열고
ether 00:0c:29:19:94:7f  << 이것이 바로 호스트2의 맥어드레스 주소에 해당한다.
-특정한 장비에 아이피할당하기
00:0c:29:cc:e9:eb 호스트1 의 맥어드레스주소를 얻어와서 할당해준다.
 
host host1 {
 hardware ethernet 00:0c:29:cc:e9:eb;  <<host1의 맥어드레스를 할당.
 fixed-address 192.168.100.20;
}
host dhcpserver {
 hardware ethernet  00:0c:29:19:94:7f;    <<host2 의 맥어드레스 충돌방지용
 fixed-address 192.168.100.102;
}
[root@host1 ~]# nmcli device disconnect ens160 	로 해제했다가 다시 할당하자.
[root@host1 ~]# nmcli device connect ens160

~~~~~~~~
정리하자면 
# yum install dhcp-server
# vim /etc/dhcp/dhcpd.conf (먼저)
# systemctl start dhcpd.service
# firewall-cmd --add-service=dhcp --permanent
# firewall-cmd --reload

# DNS Server
option domain-name-servers 168.126.63.1, 168.126.63.2;
default-lease-time 600;
max-lease-time 7200;
log-facility local7;
#  Configure a DHCP IP Address Pool
subnet 192.168.100.0 netmask 255.255.255.0 {
        range 192.168.100.10 192.168.100.254;
        option routers 192.168.100.2;
        option broadcast-address 192.168.100.255;  		를 참고하기

Port
  - 호스트로 패킷이 전달된 후 종단 노드의 프로세스(애플리케이션)끼리 통신을 하기 위해 사용하는 논리적인 주소로 Host 내에서 중복되지 않는 포트번호를 할당 받음.
  - 포트 번호는 전송 프로토콜과 조합하여 사용하며 포트번호의 범위는 0 ~ 65535 임.
https://ko.wikipedia.org/wiki/TCP/UDP%EC%9D%98_%ED%8F%AC%ED%8A%B8_%EB%AA%A9%EB%A1%9D 

Source Port(출발지 포트) : 패킷을 보내는 송신자가 사용하는 포트 번호
Destination Port(목적지 포트) : 패킷을 받는 수신자가 사용하는 포트 번호

Port 종류
  - Well-Known Port (0 ~ 1023)
      - 0 ~ 1023 까지 총 1024개의 포트로 주로 네트워크 프로토콜이 사용하는 포트
      - Unix 계열의 시스템에서 해당 포트는 반드시 root 사용자만 사용할 수 있음. (Privileged Port)
        Telnet : TCP/23,  SSH : TCP/22,  HTTP(Web)  :  TCP/80, HTTPS  :  TCP/443

  - Registered Port(1024 ~ 49151)
      - 1024 ~ 49151 범위의 포트번호를 가지며 Application이 사용하는 포트 번호
        MySQL :  TCP/3306,  Oracle :  TCP/1521,  원격데스크탑(RDP)  :  TCP/3389 

  - Dynamic Port(49152 ~ 65535)
     - OS가 프로세스에 임의로 할당하는 포트

FTP(File Transfer Protocol)
 - 네트워크에서 파일을 전송하기 위한 프로토콜

FTP 모드
  - Active Mode : 데이터 전송시 서버에서 클라이언트로 접속
  - Passive Mode : 데이터 전송시 Client가 서버의 FTP-Data 포트(TCP/20)가 아닌 서버의 다른 포트로 접속하여 데이터를 전송 받는 방식

# vsFTP (Very Secure FTP) 
보안성, 효율성, 리눅스 및 UNIX시스템 통합, 설정 및 관리 용이성, 액세스 제어, 로그및 감사 용으로 사용한다.

FTP 서비스를 구축
[root@host2 ~]# yum install vsftpd.x86_64
[root@host2 ~]# systemctl start vsftpd.service 
[root@host2 ~]# systemctl enable vsftpd.service
 
[root@host2 ~]# firewall-cmd --permanent --add-service=ftp
success
[root@host2 ~]# firewall-cmd --reload 
success

FTP 서비스 설정
 /etc/vsftpd/vsftpd.conf : vsftpd 구성 파일
 /etc/vsftpd/user_list
 /etc/vsftpd/ftpusers

vsftpd.conf 주요 설정 내용
anonymous_enable=NO  // 익명사용자 허용 여부
local_enable=YES            // 시스템의 로컬 사용자 로그인 허용 여부
write_enable=YES            // FTP에서 파일 생성 및 삭제 등을 할 수 있는지 여부
local_umask=022              // umask 값 설정
xferlog_enable=YES         // FTP File 전송 로그(xferlog) 기록 여부
connect_from_port_20=YES  // ftp-data(TCP/20) 포트 사용 여부
userlist_enable=YES        // userlist 사용 여부 지정



