4주차_화요일 메모 

server-1,2,3,4, power on
VMWare Workstation-Network
MS WINDOWS
ncpa.cpl
SMB(Server Message Block) == NFS




nameserver 172.25.3.11,172.25.3.12
ytn.zone ytn2023.com.zone
==========================================================
[root@server-1 ~]# cat -n /etc/resolv.conf 
     1	# Generated by NetworkManager
     2	search example.com
     3	nameserver 172.25.3.11
     4	nameserver 172.25.3.12

[root@server-3 ~]# vi /etc/resolv.conf 
[root@server-3 ~]# nmcli con mod ens160 ipv4.dns 172.25.3.11,172.25.3.12
[root@server-3 ~]# nmcli con up ens160
[root@server-3 ~]# cat /etc/resolv.conf 
# Generated by NetworkManager
search example.com
nameserver 172.25.3.11
nameserver 172.25.3.12

#후보(예비)

[root@Server-4 ~]# nslookup svr1.ytn2023
[root@Server-4 ~]# nslookup svr3.ytn2023
svr1이 죽었을 경우 svr3에서 예비로 연결해서 연출할 수 있다.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VMware 네트워크인 VMnet8의 dns서버를 172.25.3.11 /보조 172.25.3.12로 설정한다.

C:\Users\USER>ping svr1.ytn2023.com
Ping svr1.ytn2023.com [172.25.3.11] 32바이트 데이터 사용:
172.25.3.11의 응답: 바이트=32 시간<1ms TTL=64
172.25.3.11의 응답: 바이트=32 시간<1ms TTL=64
172.25.3.11의 응답: 바이트=32 시간<1ms TTL=64
172.25.3.11의 응답: 바이트=32 시간<1ms TTL=64

172.25.3.11에 대한 Ping 통계:
    패킷: 보냄 = 4, 받음 = 4, 손실 = 0 (0% 손실),
왕복 시간(밀리초):
    최소 = 0ms, 최대 = 0ms, 평균 = 0ms
>ping이 잘 되고있다.
~~~~
C:\Users\USER>ipconfig /displaydns
Windows IP 구성
    svr1.ytn2023.com
    ----------------------------------------
    데이터 이름 . . . . . : svr1.ytn2023.com
    데이터 유형 . . . . . : 1
    TTL(Time To Live) . : 86353
    데이터 길이 . . . . . : 4
    섹션 . . . . . . . : 응답
    (호스트) 레코드 . . . : 172.25.3.11
    play.google.com
    ----------------------------------------
    데이터 이름 . . . . . : play.google.com
    데이터 유형 . . . . . : 1
    TTL(Time To Live) . : 57
    데이터 길이 . . . . . : 4
    섹션 . . . . . . . : 응답
    (호스트) 레코드 . . . : 142.251.42.142
>캐싱되는것을 확인할 수 있다.
C:\Users\USER>ipconfig /flushdns   로 캐싱을 플러시한다.

C:\Users\USER>ipconfig /displaydns
Windows IP 구성
C:\Users\USER>nslookup svr3.ytn2023.com
서버:    svr1.ytn2023.com
Address:  172.25.3.11
이름:    svr3.ytn2023.com
Address:  172.25.3.13
===========================================================
#리눅스 네트워크 연결 스토리지 액세스
=실습파일 15 NFS 와 SAMBA 참고.			tip)콤마 좌우에 공백이 없게하자

[root@server-1 ~]# yum -y install nfs*
[root@server-1 ~]# systemctl enable -permanent --now nfs-server.service 
[root@server-1 ~]# systemctl restart nfs-server
[root@server-1 ~]# firewall-cmd --permanent --add-service={nfs,mountd,rpc-bind}
[root@server-1 ~]# firewall-cmd --reload
[root@server-1 ~]# firewall-cmd --list-all
  services: cockpit dhcpv6-client dns http https mountd nfs rpc-bind ssh telnet
  ports: 23/tcp 22/tcp 80/tcp 443/tcp 53/udp 53/tcp
>꼭 --permanent를 넣을것.
[root@server-1 ~]# ll /etc/exports
-rw-r--r--. 1 root root 0  6월 23  2020 /etc/exports
[root@server-1 ~]# cat /etc/exports
>>시스템 환경파일은 export에 꼭 s를 붙여야 한다.
[root@server-1 ~]# mkdir -pv /project
mkdir: created directory '/project'
[root@server-1 ~]# mkdir -pv /source/data
mkdir: created directory '/source'
mkdir: created directory '/source/data'
[root@server-1 ~]# touch /project/readme.md
[root@server-1 ~]# touch /source/data/file1.txt
[root@server-1 ~]# ll /etc/exports
-rw-r--r--. 1 root root 0  6월 23  2020 /etc/exports
vim 편집기로 들어간다.			*ro=readonly , rw=readwrite
  1 /project        *(ro)
  2 /source/data    172.25.3.0/24(rw)
[root@server-1 ~]# cat /etc/exports
/project	*(ro)
/source/data	172.25.3.0/24(rw)
[root@server-1 ~]# systemctl restart nfs-server
[root@server-1 ~]# exportfs -vr		:nfs클라이언트가 로컬디렉토리 마운트하도록 함.
exporting 172.25.3.0/24:/source/data
exporting *:/project

서버2로 넘어감. 
[root@server-2 ~]# yum install nfs* 			*[ host ] 대괄호만 있는것=선택사항
[root@server-2 ~]# showmount -a
clnt_create: RPC: Program not registered
[root@server-2 ~]# showmount -e  172.25.3.11
clnt_create: RPC: Unable to receive		>>여기서 에러뜨면 방화벽 추가를 해야됨.
Export list for 172.25.3.11:
/project     *
/source/data 172.25.3.0/24 		>>정답
[root@server-2 ~]# firewall-cmd --permanent --add-service={nfs,mountd,rpc-bind}
[root@server-2 ~]# firewall-cmd --reload
~~>>문제는 .11이 아니라 .1아이피 설정이 되어있었음.
mkdir -pv /mnt/svr1_data
[root@server-2 ~]# mount -t nfs 172.25.3.11:/project /mnt/svr1
[root@server-2 ~]# df -hT | tail -1
172.25.3.11:/project     nfs4       36G  5.0G   31G  15% /mnt/svr1
172.25.3.11:/source/data nfs4       36G  5.0G   31G  15% /mnt/svr1_data :정답
[root@server-2 ~]# ll /mnt/svr1

[root@server-1 ~]# chmod -v o+w /source/data/
mode of '/source/data/' changed from 0755 (rwxr-xr-x) to 0757 (rwxr-xrwx)

[root@server-2 ~]# mount -t nfs 172.25.3.11:/source/data /mnt/svr1_data
touch /mnt/svr1_data/file2.txt
~~~~
  File: /source/data/
  Size: 23        	Blocks: 0          IO Block: 4096   디렉토리
Device: fd00h/64768d	Inode: 35177424    Links: 2
Access: (0755/drwxr-xr-x)  Uid: (    0/    root)   Gid: (    0/    root)
>chmod 명령 으로 others 에서 w기능 제거.
[root@server-1 ~]# chmod -v o-w /source/data/
mode of '/source/data/' changed from 0757 (rwxr-xrwx) to 0755 (rwxr-xr-x)
그러면
[root@server-2 ~]# touch /mnt/svr1_data/file3.txt
touch: cannot touch '/mnt/svr1_data/file3.txt': Permission denied가 뜨게됨.
[root@server-2 ~]# showmount -e 172.25.3.11
Export list for 172.25.3.11:
/project     *
/source/data 172.25.3.0/24
 그 이유는 서버1에서의 권한 부여가 안되어서.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[root@server-2 ~]# umount -v /mnt/svr1
[root@server-2 ~]# umount -v /mnt/svr1_data
[root@server-2 ~]# vim /etc/fstab 	
 17 172.25.3.11:/project    /mnt/svr1       nfs     defaults        0 0  를 추가한다.
:!showmount -e 172.25.3.11 쉘 명령을 쓰고싶을때 입력하면
/source/data   를 찾아서 복사붙여넣기 하러올 수 있다. 그래서 아랫줄에
  18 172.25.3.11:/source/data        /mnt/svr1_data  nfs defaults 0 0 를 추가한다.
>>이것은 자동마운트를 위해서 fstab에 등록하는 것이 의도이다.
~~~~~~~~~~~~~~~~
[root@server-2 ~]# systemctl daemon-reload후
[root@server-2 ~]# df -hT | tail -2
172.25.3.11:/project nfs4       36G  5.0G   31G  15% /mnt/nfs1
172.25.3.11:/source/data nfs4       36G  5.0G   31G  15% /mnt/nfs1
>옮은답은
172.25.3.11:/project nfs4 			/mnt/svr1
172.25.3.11:/source/data nfs4			/mnt/svr1_data   가 나와야한다.
위에서 한거 다시 해보기.

[root@server-2 ~]# showmount -e  172.25.3.11
clnt_create: RPC: Unable to receive		>>여기서 에러뜨면 방화벽 추가를 해야됨.
[root@server-2 ~]# firewall-cmd --permanent --add-service={nfs,mountd,rpc-bind}
[root@server-2 ~]# firewall-cmd --reload
~~>>문제는 .11이 아니라 .1아이피 설정이 되어있었음.
mkdir -pv /mnt/svr1_data
[root@server-2 ~]# mount -t nfs 172.25.3.11:/project /mnt/nfs1
[root@server-2 ~]# df -hT | tail -1
[root@server-2 ~]# ll /mnt/svr1

[root@server-1 ~]# chmod -v o+w /source/data/
mode of '/source/data/' changed from 0755 (rwxr-xr-x) to 0757 (rwxr-xrwx)

[root@server-2 ~]# mount -t nfs 172.25.3.11:/source/data /mnt/svr1_data
 이부분이 이상함
=====================
오답노트
[root@server-2 ~]# mkdir -pv /mnt/svr1_data
mkdir: created directory '/mnt/svr1_data'
[root@server-2 ~]# mount -t nfs 172.25.3.11:/source/data  /mnt/svr1_data 
>>걸리적거리던 '파일 svr1_data'삭제 후 '폴더 svr1_data'다시 생성후 재마운트
[root@server-2 ~]# df -hT |tail -5
172.25.3.11:/source/data nfs4       36G  5.0G   31G  15% /mnt/svr1_data
172.25.3.11:/project     nfs4       36G  5.0G   31G  15% /mnt/svr1

[root@server-2 ~]# showmount -e 172.25.3.11
Export list for 172.25.3.11:
/project     *
/source/data 172.25.3.0/24


===========================================================
at 14:00  # SMB Protocol ,SAMBA 
파일 탐색기>내pc> 컴퓨터 관리> 서비스 내의 Server, workstation >>SMB를 찾을수o
 
SMB-  첫번째 시나리오 : 리눅스에 SMB를 설치
yum -y install samba*를 입력.

[root@server-1 ~]# systemctl enable --now smb.service  
[root@server-1 ~]# systemctl enable --now nmb.service  >오래된 smb버전
[root@server-1 ~]# firewall-cmd --permanent --add-service=samba >방화벽 추가.
[root@server-1 ~]# firewall-cmd --reload

[root@server-1 ~]# mkdir -pv /win_share
mkdir: created directory '/win_share'
[root@server-1 ~]# echo "Hello" >> /win_share/hello.txt
[root@server-1 ~]# vim /etc/samba/smb.conf			
						*read only=no면 w가 가능하다는 말
[test]
         comment = Share Testing
         path = /win_share
         browseable = Yes
         read only = No					를 추가함
[root@server-1 ~]# testparm 			로 테스트한다.
Load smb config files from /etc/samba/smb.conf
Loaded services file OK.
[root@server-1 ~]# systemctl restart smb nmb		를 입력해서 메세지없으면 정상.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[root@server-1 ~]# useradd    winuser
[root@server-1 ~]# passwd winuser        pw:1
[root@server-1 ~]# smbpasswd -a  winuser 			smb용 pw또설정
New SMB password:			   pw:1234

[root@server-1 ~]# tree /win_share/
/win_share/
└── hello.txt
~~
win+R 키를 눌러 시스템 실행창을 켠다.
\\172.25.3.11\ 				>관리자권한때문에 안될수도 있다.
~~~~~~
#SELinux 설정
								>딴짓못하도록 제한기능
[root@server-1 ~]# ls -ld /win_share/
drwxr-xr-x. 2 root root 23  9월 12 14:30 /win_share/
[root@server-1 ~]# ls -ldZ /win_share/
drwxr-xr-x. 2 root root unconfined_u:object_r:default_t:s0 23  9월 12 14:30 /win_share/
>둘에 차이가 있는 것을 볼 수 있다.

[root@server-1 ~]# semanage fcontext -l | grep samba
[root@server-1 ~]# semanage fcontext -at samba_share_t '/win_share(/.*)?'
[root@server-1 ~]# restorecon -Rv /win_share/
  Relabeled /win_share from unconfined_u:object_r:default_t:s0 to unconfined_u:object_r:samba_share_t:s0
  Relabeled /win_share/hello.txt from unconfined_u:object_r:default_t:s0 to unconfined_u:object_r:samba_share_t:s0
~~~~
이후 네트워크> 172.25.3.11> test폴더로 진입하려면 winuser /1234를 입력하면 된다.
/test/hello.txt를 찾을 수 있음.

[root@server-1 ~]# ls -ld /win_share/
drwxr-xr-x. 2 root root 23  9월 12 14:30 /win_share/ 	W권한이 없는 것 확인가능.
[root@server-1 ~]# chmod -v o+w /win_share/		를 입력해서		
mode of '/win_share/' changed from 0755 (rwxr-xr-x) to 0757 (rwxr-xrwx)  권한주기가능
>>aaa.txt를 /test에 만들기가 가능해졌다.

c드라이브에 ms폴더를 만들고, abc.txt를 만든다.
==========================================================
#SAMBA Client : 서버1에서 작업.
ms 계정을 일단 생성한다. 내pc> 추가옵션> 관리> 로컬 사용자 및 그룹> user 속성> 소속그룹을 보면 Administrators에 속함.>새 사용자>win1 생성. pw 1 > win1속성> 소속그룹을 Administrators에 추가>고급 >지금찾기 > Administrators> 확인 > ms폴더 속성> 고급공유 > 선택한 폴더 공유, 모든 권한 부여. > 보안탭> 어센티케이티드 유저 모든권한 부여

vi /etc/samba/smb.conf 들어감.


[root@server-1 ~]# yum install cifs* -y 		설치하기.
[root@server-1 ~]# mkdir -pv /mnt/win
mkdir: created directory '/mnt/win'			>마운트용 폴더생성
[root@server-1 ~]# mount -o  username=win1,password=1 -t cifs //172.25.3.1/ms /mnt/win                  					>마운트하기
 [root@server-1 ~]# ll /mnt/win/
합계 0
-rwxr-xr-x. 1 root root 0  9월 12 15:48 abc.txt

[root@server-1 ~]# df -hT			확인시 
//172.25.3.1/ms     cifs      477G  115G  362G  25% /mnt/win	마운트된것 확인가능

[root@server-1 ~]# umount -v /mnt/win
umount: /mnt/win (//172.25.3.1/ms) unmounted
>마운트해제하기


>영구적으로 부팅시에 마운트하려면 vim /etc/fstab에 넣어야 한다.
 17 //172.25.3.11/ms /mnt/win  cifs  username=win1,password=1 0 0   를 끼워넣기한다.
[root@server-1 ~]# systemctl daemon-reload
[root@server-1 ~]# mount -a
mount error(13): Permission denied
Refer to the mount.cifs(8) manual page (e.g. man mount.cifs) and kernel log messages (dmesg)
>언마운트 시 주석처리 #하면 된다.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
[root@server-1 ~]# rm -rvf ~/.ssh	 		서버1,2에 박는다.
[root@server-1 ~]# vim /etc/hosts
[root@server-1 ~]# ssh-keygen 		엔터4번
[root@server-1 ~]# ssh-copy-id root@172.25.3.12    yes
[root@server-2 ~]# ssh-keygen
[root@server-2 ~]# ssh-copy-id root@172.25.3.11    yes
====================================================
#파일 동기화  rsync 
실습파일 14 참조    
-delta 인코딩 기술. = 변경된 것만 전송한다.(수정된 파일만 동기화,교체해줌)
[root@server-1 ~]# mkdir -pv /source /target
mkdir: created directory '/source'
mkdir: created directory '/target'

cmd창에서 ctrl shift T 키를 누르면, 두개의 cmd창이 생긴다(탭 추가)
왼쪽창은 cd /source		오른쪽창은 cd /target
[root@server-1 source]# echo "Hello" >> file1.txt
*[root@server-1 source]# cp -rv file1.txt /target/를 하지 않고, 

[root@server-1 source]# rsync -av /source/* /target/
sending incremental file list
file1.txt
sent 111 bytes  received 35 bytes  292.00 bytes/sec
total size is 6  speedup is 0.04

[root@server-1 source]# cat >> file2.txt
aaaaa
bbbbb 
ccccc
[root@server-1 source]# rsync -av /source/* /target/
sending incremental file list
file2.txt

sent 144 bytes  received 35 bytes  358.00 bytes/sec
total size is 24  speedup is 0.13

오른쪽에서 보면
[root@server-1 target]# cat file1.txt 
Hello
[root@server-1 target]# cat file2.txt 
aaaaa
bbbbb
ccccc
~~~~
[root@server-1 source]# echo "Linux" >> file1.txt 
[root@server-1 source]# cat file1.txt 
Hello
Linux
[root@server-1 source]# rsync -av /source/* /target/
>> 바뀐 파일만 전송된다.
[root@server-1 source]# touch file3.txt
[root@server-1 target]# ll
-rw-r--r--. 1 root root 12  9월 12 17:25 file1.txt
-rw-r--r--. 1 root root 18  9월 12 17:22 file2.txt
[root@server-1 source]# rsync -av /source/* /target/
[root@server-1 target]# ll
-rw-r--r--. 1 root root 12  9월 12 17:25 file1.txt
-rw-r--r--. 1 root root 18  9월 12 17:22 file2.txt
-rw-r--r--. 1 root root  0  9월 12 17:31 file3.txt

#삭제까지 해본다.
[root@server-1 source]# touch file4.txt
[root@server-1 source]# touch file5.txt
[root@server-1 source]# ll
합계 8
-rw-r--r--. 1 root root 12  9월 12 17:25 file1.txt
-rw-r--r--. 1 root root 18  9월 12 17:22 file2.txt
-rw-r--r--. 1 root root  0  9월 12 17:31 file3.txt
-rw-r--r--. 1 root root  0  9월 12 17:33 file4.txt
-rw-r--r--. 1 root root  0  9월 12 17:33 file5.txt
[root@server-1 source]# rm -rvf file1.txt 
removed 'file1.txt'
[root@server-1 source]# rsync -av /source/* /target/
sending incremental file list
file4.txt
file5.txt
sent 203 bytes  received 54 bytes  514.00 bytes/sec
total size is 18  speedup is 0.07

[root@server-1 target]# ll
합계 8
-rw-r--r--. 1 root root 12  9월 12 17:25 file1.txt
-rw-r--r--. 1 root root 18  9월 12 17:22 file2.txt
-rw-r--r--. 1 root root  0  9월 12 17:31 file3.txt
-rw-r--r--. 1 root root  0  9월 12 17:33 file4.txt
-rw-r--r--. 1 root root  0  9월 12 17:33 file5.txt
>>삭제한 것은 동기화 되지 않았다.
~~~~~~~~~~~~~~~~~~~~~~~~~
#삭제까지도 동기화 하는법 ?
>해결안됨






























































































